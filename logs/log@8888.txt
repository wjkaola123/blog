2018-05-19 18:38:43,148 - tornado.application - ioloop.py[line:633] - ERROR - Exception in callback <functools.partial object at 0x0000000004236368>
Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\tornado\ioloop.py", line 604, in _run_callback
    ret = callback()
  File "C:\Python27\lib\site-packages\tornado\stack_context.py", line 275, in null_wrapper
    return fn(*args, **kwargs)
  File "C:\Python27\lib\site-packages\tornado\ioloop.py", line 619, in <lambda>
    self.add_future(ret, lambda f: f.result())
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1021, in run
    yielded = self.gen.throw(*exc_info)
  File "e:\httpdocs\blog\extends\pub_sub_tornadis.py", line 57, in connect_and_listen
    yield self.first_do_after_subscribed()
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1021, in run
    yielded = self.gen.throw(*exc_info)
  File "e:\httpdocs\blog\service\pubsub_service.py", line 30, in first_do_after_subscribed
    yield SiteCacheService.query_all(self.cache_manager, self.thread_do, self.db)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1021, in run
    yielded = self.gen.throw(*exc_info)
  File "e:\httpdocs\blog\service\init_service.py", line 55, in query_all
    yield SiteCacheService.query_article_month_count(cache_manager, thread_do, db, is_pub_all, pubsub_manager)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1021, in run
    yielded = self.gen.throw(*exc_info)
  File "e:\httpdocs\blog\service\init_service.py", line 118, in query_article_month_count
    cache_manager, article_month_count, is_pub_all, pubsub_manager
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 285, in wrapper
    yielded = next(result)
  File "e:\httpdocs\blog\service\init_service.py", line 287, in update_article_month_count
    article_month_count_json = json.dumps(article_month_count, cls=AlchemyEncoder)
  File "C:\Python27\lib\json\__init__.py", line 251, in dumps
    sort_keys=sort_keys, **kw).encode(obj)
  File "C:\Python27\lib\json\encoder.py", line 207, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Python27\lib\json\encoder.py", line 270, in iterencode
    return _iterencode(o, 0)
  File "e:\httpdocs\blog\extends\utils.py", line 43, in default
    return json.JSONEncoder.default(self, o)
  File "C:\Python27\lib\json\encoder.py", line 184, in default
    raise TypeError(repr(o) + " is not JSON serializable")
TypeError: (u'2018-03', 13L) is not JSON serializable
2018-05-19 19:19:30,595 - tornado.application - template.py[line:320] - ERROR - base.html code:
  1  def _tt_execute():  # base.html:0
  2      _tt_buffer = []  # base.html:0
  3      _tt_append = _tt_buffer.append  # base.html:0
  4      _tt_append('<!DOCTYPE html> ')  # base.html:1
  5      from model.site_info import SiteCollection  # base.html:1
  6      _tt_append(' ')  # base.html:1
  7      from model.constants import Constants  # base.html:1
  8      _tt_append('\n<html>\n<head>\n<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta charset="UTF-8">\n<title>\n')  # base.html:8
  9      _tt_append(' ')  # base.html:8 (via base.html:8)
 10      _tt_tmp = SiteCollection.title  # base.html:8 (via base.html:8)
 11      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:8 (via base.html:8)
 12      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:8 (via base.html:8)
 13      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:8 (via base.html:8)
 14      _tt_append(_tt_tmp)  # base.html:8 (via base.html:8)
 15      _tt_append(' ')  # base.html:8 (via base.html:8)
 16      _tt_append('\n</title>\n')  # base.html:10
 17      _tt_append('\n<link href="')  # base.html:11 (via base.html:10)
 18      _tt_tmp = static_url('css/bootstrap.css')  # base.html:11 (via base.html:10)
 19      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:11 (via base.html:10)
 20      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:11 (via base.html:10)
 21      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:11 (via base.html:10)
 22      _tt_append(_tt_tmp)  # base.html:11 (via base.html:10)
 23      _tt_append('" rel="stylesheet">\n<link href="')  # base.html:12 (via base.html:10)
 24      _tt_tmp = static_url('css/common.css')  # base.html:12 (via base.html:10)
 25      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:12 (via base.html:10)
 26      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:12 (via base.html:10)
 27      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:12 (via base.html:10)
 28      _tt_append(_tt_tmp)  # base.html:12 (via base.html:10)
 29      _tt_append('" rel="stylesheet"> ')  # base.html:12 (via base.html:10)
 30      _tt_append(' ')  # base.html:12 (via base.html:12, base.html:10)
 31      _tt_append(' ')  # base.html:12 (via base.html:10)
 32      _tt_append('\n</head>\n<body>\n<header>\n<div class=\'header-top\'>\n<div class="container">\n<h2 class="blog-title"><a href="')  # base.html:19
 33      _tt_tmp = reverse_url('index')  # base.html:19
 34      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 35      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 36      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 37      _tt_append(_tt_tmp)  # base.html:19
 38      _tt_append('">')  # base.html:19
 39      _tt_tmp = SiteCollection.title  # base.html:19
 40      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 41      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 42      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 43      _tt_append(_tt_tmp)  # base.html:19
 44      _tt_append('</a></h2>\n<p class="lead signature">\n')  # base.html:21
 45      _tt_tmp = SiteCollection.signature  # base.html:21
 46      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:21
 47      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:21
 48      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:21
 49      _tt_append(_tt_tmp)  # base.html:21
 50      _tt_append('\n</p>\n</div>\n</div>\n<nav class="navbar navbar-')  # base.html:25
 51      _tt_tmp = SiteCollection.navbar  # base.html:25
 52      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:25
 53      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:25
 54      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:25
 55      _tt_append(_tt_tmp)  # base.html:25
 56      _tt_append('" role="navigation">\n<div class="container">\n<div class="navbar-header">\n<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">\n<span class="sr-only">\xe5\x88\x87\xe6\x8d\xa2\xe5\xaf\xbc\xe8\x88\xaa</span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</button>\n</div>\n<div class="collapse navbar-collapse">\n<ul class="nav navbar-nav">\n<li class=""><a href="/"><span class="glyphicon glyphicon-home"> \xe9\xa6\x96\xe9\xa1\xb5</span></a></li>\n')  # base.html:38
 57      for menu in SiteCollection.menus:  # base.html:38
 58          _tt_append(' ')  # base.html:38
 59          if menu.all_types:  # base.html:38
 60              _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n')  # base.html:41
 61              _tt_tmp = menu.name  # base.html:41
 62              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:41
 63              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:41
 64              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:41
 65              _tt_append(_tt_tmp)  # base.html:41
 66              _tt_append('\n<b class="caret"></b></a>\n<ul class="dropdown-menu">\n')  # base.html:44
 67              for article_type in menu.all_types:  # base.html:44
 68                  _tt_append(' ')  # base.html:44
 69                  if not article_type.is_hide:  # base.html:44
 70                      _tt_append('\n<li>\n<a href="')  # base.html:46
 71                      _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:46
 72                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:46
 73                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:46
 74                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:46
 75                      _tt_append(_tt_tmp)  # base.html:46
 76                      _tt_append('">\n')  # base.html:47
 77                      _tt_tmp = article_type.name  # base.html:47
 78                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:47
 79                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:47
 80                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:47
 81                      _tt_append(_tt_tmp)  # base.html:47
 82                      _tt_append('\n</a>\n</li>\n<li class="divider"></li>\n')  # base.html:51
 83                      pass  # base.html:44
 84                  _tt_append(' ')  # base.html:51
 85                  pass  # base.html:44
 86              _tt_append('\n</ul>\n</li>\n')  # base.html:54
 87              pass  # base.html:38
 88          _tt_append(' ')  # base.html:54
 89          pass  # base.html:38
 90      _tt_append(' ')  # base.html:54
 91      for article_type in SiteCollection.article_types_not_under_menu:  # base.html:54
 92          _tt_append(' ')  # base.html:54
 93          if not article_type.is_hide:  # base.html:54
 94              _tt_append('\n<li>\n<a href="')  # base.html:57
 95              _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:57
 96              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:57
 97              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:57
 98              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:57
 99              _tt_append(_tt_tmp)  # base.html:57
100              _tt_append('">\n')  # base.html:58
101              _tt_tmp = article_type.name  # base.html:58
102              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:58
103              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:58
104              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:58
105              _tt_append(_tt_tmp)  # base.html:58
106              _tt_append('\n</a>\n</li>\n')  # base.html:61
107              pass  # base.html:54
108          _tt_append(' ')  # base.html:61
109          pass  # base.html:54
110      _tt_append('\n</ul>\n<ul class="nav navbar-nav navbar-right">\n')  # base.html:64
111      if current_user:  # base.html:64
112          _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n<img style="height: 18px" src="')  # base.html:67
113          _tt_tmp = current_user['avatar']  # base.html:67
114          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:67
115          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:67
116          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:67
117          _tt_append(_tt_tmp)  # base.html:67
118          _tt_append('">\n')  # base.html:68
119          _tt_tmp = current_user['name']  # base.html:68
120          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:68
121          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:68
122          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:68
123          _tt_append(_tt_tmp)  # base.html:68
124          _tt_append(' <b class="caret"></b>\n</a>\n<ul class="dropdown-menu">\n<li><a href="')  # base.html:71
125          _tt_tmp = reverse_url('admin.article.action', 'submit')  # base.html:71
126          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:71
127          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:71
128          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:71
129          _tt_append(_tt_tmp)  # base.html:71
130          _tt_append('">\xe5\x8f\x91\xe8\xa1\xa8\xe5\x8d\x9a\xe6\x96\x87</a></li>\n<li><a href="')  # base.html:72
131          _tt_tmp = reverse_url('admin.account')  # base.html:72
132          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:72
133          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:72
134          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:72
135          _tt_append(_tt_tmp)  # base.html:72
136          _tt_append('">\xe7\xae\xa1\xe7\x90\x86\xe5\x8d\x9a\xe5\xae\xa2</a></li>\n<li><a href="')  # base.html:73
137          _tt_tmp = reverse_url('logout')  # base.html:73
138          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:73
139          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:73
140          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:73
141          _tt_append(_tt_tmp)  # base.html:73
142          _tt_append('">\xe9\x80\x80\xe5\x87\xba\xe7\x99\xbb\xe9\x99\x86</a></li>\n</ul>\n</li>\n')  # base.html:76
143          pass  # base.html:64
144      _tt_append('\n</ul>\n</div>\n</div>\n</nav>\n</header>\n')  # base.html:82
145      _tt_append('\n<div class="content">\n<div class="container">\n<div class="row">\n<div class="col-md-8 article">\n')  # base.html:87 (via base.html:82)
146      if handler.has_message():  # base.html:87 (via base.html:82)
147          _tt_append(' ')  # base.html:87 (via base.html:82)
148          for message in handler.read_messages():  # base.html:87 (via base.html:82)
149              _tt_append('\n<div class="alert alert-')  # base.html:88 (via base.html:82)
150              _tt_tmp = message['category']  # base.html:88 (via base.html:82)
151              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:88 (via base.html:82)
152              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:88 (via base.html:82)
153              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:88 (via base.html:82)
154              _tt_append(_tt_tmp)  # base.html:88 (via base.html:82)
155              _tt_append(' alert-dismissable">\n<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button> ')  # base.html:89 (via base.html:82)
156              _tt_tmp = message['message']  # base.html:89 (via base.html:82)
157              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:89 (via base.html:82)
158              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:89 (via base.html:82)
159              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:89 (via base.html:82)
160              _tt_append(_tt_tmp)  # base.html:89 (via base.html:82)
161              _tt_append('\n</div>\n')  # base.html:92 (via base.html:82)
162              pass  # base.html:87 (via base.html:82)
163          _tt_append(' ')  # base.html:92 (via base.html:82)
164          pass  # base.html:87 (via base.html:82)
165      _tt_append(' ')  # base.html:92 (via base.html:82)
166      _tt_append(' ')  # base.html:92 (via base.html:92, base.html:82)
167      _tt_append('\n</div>\n<div class="col-md-4 blog_nav">\n')  # base.html:95 (via base.html:82)
168      _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
169      for plugin in SiteCollection.plugins:  # base.html:95 (via base.html:95, base.html:82)
170          _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
171          if not plugin.disabled:  # base.html:95 (via base.html:95, base.html:82)
172              _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
173              if plugin.content
174                      != Constants.SYSTEM_PLUGIN:  # base.html:95 (via base.html:95, base.html:82)
175                  _tt_append('\n<div id="')  # base.html:97 (via base.html:95, base.html:82)
176                  _tt_tmp = plugin.title  # base.html:97 (via base.html:95, base.html:82)
177                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
178                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
179                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
180                  _tt_append(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
181                  _tt_append('" class="entry-box">\n<h5><strong>')  # base.html:98 (via base.html:95, base.html:82)
182                  _tt_tmp = plugin.title  # base.html:98 (via base.html:95, base.html:82)
183                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
184                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
185                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
186                  _tt_append(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
187                  _tt_append('</strong></h5>\n')  # base.html:99 (via base.html:95, base.html:82)
188                  _tt_tmp = plugin.content  # base.html:99 (via base.html:95, base.html:82)
189                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
190                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:99 (via base.html:95, base.html:82)
191                  _tt_append(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
192                  _tt_append('\n</div>\n')  # base.html:101 (via base.html:95, base.html:82)
193                  pass  # base.html:101 (via base.html:95, base.html:82)
194              else:  # base.html:101 (via base.html:95, base.html:82)
195                  _tt_append('\n<div class="entry-box">\n<h5><strong>\xe5\x8d\x9a\xe5\xae\xa2\xe7\xbb\x9f\xe8\xae\xa1</strong></h5>\n<p>\n\xe4\xbb\x8a\xe6\x97\xa5PV\xef\xbc\x9a<span class="badge">')  # base.html:105 (via base.html:95, base.html:82)
196                  _tt_tmp = SiteCollection.pv  # base.html:105 (via base.html:95, base.html:82)
197                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
198                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
199                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
200                  _tt_append(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
201                  _tt_append('</span> \xe4\xbb\x8a\xe6\x97\xa5UV\xef\xbc\x9a\n<span class="badge">')  # base.html:106 (via base.html:95, base.html:82)
202                  _tt_tmp = SiteCollection.uv  # base.html:106 (via base.html:95, base.html:82)
203                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
204                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
205                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
206                  _tt_append(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
207                  _tt_append('</span>\n</p>\n<p>\n\xe5\x8d\x9a\xe6\x96\x87\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a<span class="badge">')  # base.html:109 (via base.html:95, base.html:82)
208                  _tt_tmp = SiteCollection.article_count  # base.html:109 (via base.html:95, base.html:82)
209                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
210                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
211                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
212                  _tt_append(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
213                  _tt_append('</span> \xe8\xaf\x84\xe8\xae\xba\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<span class="badge">')  # base.html:110 (via base.html:95, base.html:82)
214                  _tt_tmp = SiteCollection.comment_count  # base.html:110 (via base.html:95, base.html:82)
215                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
216                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
217                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
218                  _tt_append(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
219                  _tt_append('</span> \xe6\x9c\x88\xe5\xba\xa6\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<span class="badge">')  # base.html:111 (via base.html:95, base.html:82)
220                  _tt_tmp = SiteCollection.article_month_count  # base.html:111 (via base.html:95, base.html:82)
221                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
222                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
223                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
224                  _tt_append(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
225                  _tt_append('</span>\n</p>\n<p>\n')  # base.html:114 (via base.html:95, base.html:82)
226                  for source in SiteCollection.article_sources:  # base.html:114 (via base.html:95, base.html:82)
227                      _tt_append('\n<a href="')  # base.html:115 (via base.html:95, base.html:82)
228                      _tt_tmp = reverse_url('articleSource', source.id)  # base.html:115 (via base.html:95, base.html:82)
229                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
230                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
231                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
232                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
233                      _tt_append('">')  # base.html:115 (via base.html:95, base.html:82)
234                      _tt_tmp = source.name  # base.html:115 (via base.html:95, base.html:82)
235                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
236                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
237                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
238                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
239                      _tt_append('</a>\xef\xbc\x9a\n<span class="badge">')  # base.html:116 (via base.html:95, base.html:82)
240                      _tt_tmp = source.articles_count  # base.html:116 (via base.html:95, base.html:82)
241                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
242                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
243                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
244                      _tt_append(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
245                      _tt_append('</span> ')  # base.html:116 (via base.html:95, base.html:82)
246                      pass  # base.html:114 (via base.html:95, base.html:82)
247                  _tt_append('\n</p>\n</div>\n')  # base.html:119 (via base.html:95, base.html:82)
248                  pass  # base.html:95 (via base.html:95, base.html:82)
249              _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
250              pass  # base.html:95 (via base.html:95, base.html:82)
251          _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
252          pass  # base.html:95 (via base.html:95, base.html:82)
253      _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
254      _tt_append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:124 (via base.html:82)
255      _tt_append('\n<div class="footer">\n<p class="footer-content">\n@2018\n<a target="_blank" href="https://github.com/wjkaola123/blog">blog</a> -\xe5\xbc\x80\xe6\xba\x90\xe7\x9a\x84\xe5\x88\x86\xe5\xb8\x83\xe5\xbc\x8f\xe5\x8d\x9a\xe5\xae\xa2\xe7\xb3\xbb\xe7\xbb\x9f ')  # base.html:128
256      if not current_user:  # base.html:128
257          _tt_append(' -\n<a href="')  # base.html:129
258          _tt_tmp = handler.login_url()  # base.html:129
259          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:129
260          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:129
261          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:129
262          _tt_append(_tt_tmp)  # base.html:129
263          _tt_append('">\n<span class="glyphicon glyphicon-wrench">\xe5\x90\x8e\xe5\x8f\xb0\xe7\xae\xa1\xe7\x90\x86</span>\n</a> ')  # base.html:131
264          pass  # base.html:128
265      _tt_append('\n</p>\n</div>\n<div class="btn-group-vertical floatButton">\n<button id="goTop" class="btn btn-default" title="\xe5\x8e\xbb\xe9\xa1\xb6\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-up"></span>\n</button>\n<button id="refresh" class="btn btn-default" title="\xe5\x88\xb7\xe6\x96\xb0" type="button">\n<span class="glyphicon glyphicon-refresh"></span>\n</button>\n<button id="goBottom" class="btn btn-default" title="\xe5\x8e\xbb\xe5\xba\x95\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-down"></span>\n</button>\n</div>\n')  # base.html:145
266      _tt_append('\n<script src="')  # base.html:146 (via base.html:145)
267      _tt_tmp = static_url('js/jquery-2.2.1.min.js')  # base.html:146 (via base.html:145)
268      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:146 (via base.html:145)
269      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:146 (via base.html:145)
270      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:146 (via base.html:145)
271      _tt_append(_tt_tmp)  # base.html:146 (via base.html:145)
272      _tt_append('"></script>\n<script src="')  # base.html:147 (via base.html:145)
273      _tt_tmp = static_url('js/bootstrap.min.js')  # base.html:147 (via base.html:145)
274      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:147 (via base.html:145)
275      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:147 (via base.html:145)
276      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:147 (via base.html:145)
277      _tt_append(_tt_tmp)  # base.html:147 (via base.html:145)
278      _tt_append('"></script>\n<script src="//cdn.bootcss.com/bootstrap-hover-dropdown/2.2.1/bootstrap-hover-dropdown.min.js"></script>\n<script src="')  # base.html:149 (via base.html:145)
279      _tt_tmp = static_url('js/floatButton.js')  # base.html:149 (via base.html:145)
280      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:149 (via base.html:145)
281      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:149 (via base.html:145)
282      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:149 (via base.html:145)
283      _tt_append(_tt_tmp)  # base.html:149 (via base.html:145)
284      _tt_append('"></script>\n')  # base.html:150 (via base.html:145)
285      _tt_append(' ')  # base.html:150
286      _tt_append(' ')  # base.html:150 (via base.html:150)
287      _tt_append('\n</body>\n</html>')  # base.html:153
288      return _tt_utf8('').join(_tt_buffer)  # base.html:0
2018-05-19 19:19:30,618 - tornado.application - web.py[line:1548] - ERROR - Uncaught exception GET / (::1)
HTTPServerRequest(protocol='http', host='localhost:8888', method='GET', uri='/', version='HTTP/1.1', remote_ip='::1', headers={'Accept-Language': 'zh-CN,zh;q=0.9', 'Accept-Encoding': 'gzip, deflate, br', 'Host': 'localhost:8888', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36', 'Connection': 'keep-alive', 'Cookie': 'uv_tag="2|1:0|10:1526707156|6:uv_tag|4:MTk=|d6b01a3c2fb07ad1d6932307f28288b31ef62f346eb3a47b020fa17eb84b46b3"', 'If-None-Match': '"059026c1339fbfaa37caf12afa35ea7f1ffc1cd1"', 'Upgrade-Insecure-Requests': '1'})
Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\tornado\web.py", line 1469, in _execute
    result = yield result
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1024, in run
    yielded = self.gen.send(value)
  File "e:\httpdocs\blog\controller\home.py", line 26, in get
    pager=pager, article_search_params=article_search_params)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 719, in render
    html = self.render_string(template_name, **kwargs)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 823, in render_string
    t = loader.load(template_name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 307, in __init__
    self.code = self._generate_python(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 355, in _generate_python
    ancestors = self._get_ancestors(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 373, in _get_ancestors
    template = loader.load(chunk.name, self.name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 317, in __init__
    "exec", dont_inherit=True)
  File "base_html.generated.py", line 173
    if plugin.content
                    ^
SyntaxError: invalid syntax
2018-05-19 19:19:30,631 - tornado.access - web.py[line:1971] - ERROR - 500 GET / (::1) 673.00ms
2018-05-19 19:20:50,220 - tornado.application - template.py[line:320] - ERROR - base.html code:
  1  def _tt_execute():  # base.html:0
  2      _tt_buffer = []  # base.html:0
  3      _tt_append = _tt_buffer.append  # base.html:0
  4      _tt_append('<!DOCTYPE html> ')  # base.html:1
  5      from model.site_info import SiteCollection  # base.html:1
  6      _tt_append(' ')  # base.html:1
  7      from model.constants import Constants  # base.html:1
  8      _tt_append('\n<html>\n<head>\n<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta charset="UTF-8">\n<title>\n')  # base.html:8
  9      _tt_append(' ')  # base.html:8 (via base.html:8)
 10      _tt_tmp = SiteCollection.title  # base.html:8 (via base.html:8)
 11      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:8 (via base.html:8)
 12      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:8 (via base.html:8)
 13      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:8 (via base.html:8)
 14      _tt_append(_tt_tmp)  # base.html:8 (via base.html:8)
 15      _tt_append(' ')  # base.html:8 (via base.html:8)
 16      _tt_append('\n</title>\n')  # base.html:10
 17      _tt_append('\n<link href="')  # base.html:11 (via base.html:10)
 18      _tt_tmp = static_url('css/bootstrap.css')  # base.html:11 (via base.html:10)
 19      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:11 (via base.html:10)
 20      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:11 (via base.html:10)
 21      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:11 (via base.html:10)
 22      _tt_append(_tt_tmp)  # base.html:11 (via base.html:10)
 23      _tt_append('" rel="stylesheet">\n<link href="')  # base.html:12 (via base.html:10)
 24      _tt_tmp = static_url('css/common.css')  # base.html:12 (via base.html:10)
 25      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:12 (via base.html:10)
 26      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:12 (via base.html:10)
 27      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:12 (via base.html:10)
 28      _tt_append(_tt_tmp)  # base.html:12 (via base.html:10)
 29      _tt_append('" rel="stylesheet"> ')  # base.html:12 (via base.html:10)
 30      _tt_append(' ')  # base.html:12 (via base.html:12, base.html:10)
 31      _tt_append(' ')  # base.html:12 (via base.html:10)
 32      _tt_append('\n</head>\n<body>\n<header>\n<div class=\'header-top\'>\n<div class="container">\n<h2 class="blog-title"><a href="')  # base.html:19
 33      _tt_tmp = reverse_url('index')  # base.html:19
 34      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 35      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 36      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 37      _tt_append(_tt_tmp)  # base.html:19
 38      _tt_append('">')  # base.html:19
 39      _tt_tmp = SiteCollection.title  # base.html:19
 40      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 41      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 42      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 43      _tt_append(_tt_tmp)  # base.html:19
 44      _tt_append('</a></h2>\n<p class="lead signature">\n')  # base.html:21
 45      _tt_tmp = SiteCollection.signature  # base.html:21
 46      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:21
 47      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:21
 48      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:21
 49      _tt_append(_tt_tmp)  # base.html:21
 50      _tt_append('\n</p>\n</div>\n</div>\n<nav class="navbar navbar-')  # base.html:25
 51      _tt_tmp = SiteCollection.navbar  # base.html:25
 52      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:25
 53      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:25
 54      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:25
 55      _tt_append(_tt_tmp)  # base.html:25
 56      _tt_append('" role="navigation">\n<div class="container">\n<div class="navbar-header">\n<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">\n<span class="sr-only">\xe5\x88\x87\xe6\x8d\xa2\xe5\xaf\xbc\xe8\x88\xaa</span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</button>\n</div>\n<div class="collapse navbar-collapse">\n<ul class="nav navbar-nav">\n<li class=""><a href="/"><span class="glyphicon glyphicon-home"> \xe9\xa6\x96\xe9\xa1\xb5</span></a></li>\n')  # base.html:38
 57      for menu in SiteCollection.menus:  # base.html:38
 58          _tt_append(' ')  # base.html:38
 59          if menu.all_types:  # base.html:38
 60              _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n')  # base.html:41
 61              _tt_tmp = menu.name  # base.html:41
 62              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:41
 63              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:41
 64              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:41
 65              _tt_append(_tt_tmp)  # base.html:41
 66              _tt_append('\n<b class="caret"></b></a>\n<ul class="dropdown-menu">\n')  # base.html:44
 67              for article_type in menu.all_types:  # base.html:44
 68                  _tt_append(' ')  # base.html:44
 69                  if not article_type.is_hide:  # base.html:44
 70                      _tt_append('\n<li>\n<a href="')  # base.html:46
 71                      _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:46
 72                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:46
 73                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:46
 74                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:46
 75                      _tt_append(_tt_tmp)  # base.html:46
 76                      _tt_append('">\n')  # base.html:47
 77                      _tt_tmp = article_type.name  # base.html:47
 78                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:47
 79                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:47
 80                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:47
 81                      _tt_append(_tt_tmp)  # base.html:47
 82                      _tt_append('\n</a>\n</li>\n<li class="divider"></li>\n')  # base.html:51
 83                      pass  # base.html:44
 84                  _tt_append(' ')  # base.html:51
 85                  pass  # base.html:44
 86              _tt_append('\n</ul>\n</li>\n')  # base.html:54
 87              pass  # base.html:38
 88          _tt_append(' ')  # base.html:54
 89          pass  # base.html:38
 90      _tt_append(' ')  # base.html:54
 91      for article_type in SiteCollection.article_types_not_under_menu:  # base.html:54
 92          _tt_append(' ')  # base.html:54
 93          if not article_type.is_hide:  # base.html:54
 94              _tt_append('\n<li>\n<a href="')  # base.html:57
 95              _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:57
 96              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:57
 97              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:57
 98              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:57
 99              _tt_append(_tt_tmp)  # base.html:57
100              _tt_append('">\n')  # base.html:58
101              _tt_tmp = article_type.name  # base.html:58
102              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:58
103              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:58
104              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:58
105              _tt_append(_tt_tmp)  # base.html:58
106              _tt_append('\n</a>\n</li>\n')  # base.html:61
107              pass  # base.html:54
108          _tt_append(' ')  # base.html:61
109          pass  # base.html:54
110      _tt_append('\n</ul>\n<ul class="nav navbar-nav navbar-right">\n')  # base.html:64
111      if current_user:  # base.html:64
112          _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n<img style="height: 18px" src="')  # base.html:67
113          _tt_tmp = current_user['avatar']  # base.html:67
114          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:67
115          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:67
116          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:67
117          _tt_append(_tt_tmp)  # base.html:67
118          _tt_append('">\n')  # base.html:68
119          _tt_tmp = current_user['name']  # base.html:68
120          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:68
121          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:68
122          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:68
123          _tt_append(_tt_tmp)  # base.html:68
124          _tt_append(' <b class="caret"></b>\n</a>\n<ul class="dropdown-menu">\n<li><a href="')  # base.html:71
125          _tt_tmp = reverse_url('admin.article.action', 'submit')  # base.html:71
126          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:71
127          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:71
128          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:71
129          _tt_append(_tt_tmp)  # base.html:71
130          _tt_append('">\xe5\x8f\x91\xe8\xa1\xa8\xe5\x8d\x9a\xe6\x96\x87</a></li>\n<li><a href="')  # base.html:72
131          _tt_tmp = reverse_url('admin.account')  # base.html:72
132          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:72
133          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:72
134          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:72
135          _tt_append(_tt_tmp)  # base.html:72
136          _tt_append('">\xe7\xae\xa1\xe7\x90\x86\xe5\x8d\x9a\xe5\xae\xa2</a></li>\n<li><a href="')  # base.html:73
137          _tt_tmp = reverse_url('logout')  # base.html:73
138          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:73
139          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:73
140          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:73
141          _tt_append(_tt_tmp)  # base.html:73
142          _tt_append('">\xe9\x80\x80\xe5\x87\xba\xe7\x99\xbb\xe9\x99\x86</a></li>\n</ul>\n</li>\n')  # base.html:76
143          pass  # base.html:64
144      _tt_append('\n</ul>\n</div>\n</div>\n</nav>\n</header>\n')  # base.html:82
145      _tt_append('\n<div class="content">\n<div class="container">\n<div class="row">\n<div class="col-md-8 article">\n')  # base.html:87 (via base.html:82)
146      if handler.has_message():  # base.html:87 (via base.html:82)
147          _tt_append(' ')  # base.html:87 (via base.html:82)
148          for message in handler.read_messages():  # base.html:87 (via base.html:82)
149              _tt_append('\n<div class="alert alert-')  # base.html:88 (via base.html:82)
150              _tt_tmp = message['category']  # base.html:88 (via base.html:82)
151              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:88 (via base.html:82)
152              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:88 (via base.html:82)
153              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:88 (via base.html:82)
154              _tt_append(_tt_tmp)  # base.html:88 (via base.html:82)
155              _tt_append(' alert-dismissable">\n<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button> ')  # base.html:89 (via base.html:82)
156              _tt_tmp = message['message']  # base.html:89 (via base.html:82)
157              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:89 (via base.html:82)
158              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:89 (via base.html:82)
159              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:89 (via base.html:82)
160              _tt_append(_tt_tmp)  # base.html:89 (via base.html:82)
161              _tt_append('\n</div>\n')  # base.html:92 (via base.html:82)
162              pass  # base.html:87 (via base.html:82)
163          _tt_append(' ')  # base.html:92 (via base.html:82)
164          pass  # base.html:87 (via base.html:82)
165      _tt_append(' ')  # base.html:92 (via base.html:82)
166      _tt_append(' ')  # base.html:92 (via base.html:92, base.html:82)
167      _tt_append('\n</div>\n<div class="col-md-4 blog_nav">\n')  # base.html:95 (via base.html:82)
168      _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
169      for plugin in SiteCollection.plugins:  # base.html:95 (via base.html:95, base.html:82)
170          _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
171          if not plugin.disabled:  # base.html:95 (via base.html:95, base.html:82)
172              _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
173              if plugin.content
174                      != Constants.SYSTEM_PLUGIN:  # base.html:95 (via base.html:95, base.html:82)
175                  _tt_append('\n<div id="')  # base.html:97 (via base.html:95, base.html:82)
176                  _tt_tmp = plugin.title  # base.html:97 (via base.html:95, base.html:82)
177                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
178                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
179                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
180                  _tt_append(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
181                  _tt_append('" class="entry-box">\n<h5><strong>')  # base.html:98 (via base.html:95, base.html:82)
182                  _tt_tmp = plugin.title  # base.html:98 (via base.html:95, base.html:82)
183                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
184                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
185                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
186                  _tt_append(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
187                  _tt_append('</strong></h5>\n')  # base.html:99 (via base.html:95, base.html:82)
188                  _tt_tmp = plugin.content  # base.html:99 (via base.html:95, base.html:82)
189                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
190                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:99 (via base.html:95, base.html:82)
191                  _tt_append(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
192                  _tt_append('\n</div>\n')  # base.html:101 (via base.html:95, base.html:82)
193                  pass  # base.html:101 (via base.html:95, base.html:82)
194              else:  # base.html:101 (via base.html:95, base.html:82)
195                  _tt_append('\n<div class="entry-box">\n<h5><strong>\xe5\x8d\x9a\xe5\xae\xa2\xe7\xbb\x9f\xe8\xae\xa1</strong></h5>\n<p>\n\xe4\xbb\x8a\xe6\x97\xa5PV\xef\xbc\x9a<span class="badge">')  # base.html:105 (via base.html:95, base.html:82)
196                  _tt_tmp = SiteCollection.pv  # base.html:105 (via base.html:95, base.html:82)
197                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
198                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
199                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
200                  _tt_append(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
201                  _tt_append('</span> \xe4\xbb\x8a\xe6\x97\xa5UV\xef\xbc\x9a\n<span class="badge">')  # base.html:106 (via base.html:95, base.html:82)
202                  _tt_tmp = SiteCollection.uv  # base.html:106 (via base.html:95, base.html:82)
203                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
204                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
205                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
206                  _tt_append(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
207                  _tt_append('</span>\n</p>\n<p>\n\xe5\x8d\x9a\xe6\x96\x87\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a<span class="badge">')  # base.html:109 (via base.html:95, base.html:82)
208                  _tt_tmp = SiteCollection.article_count  # base.html:109 (via base.html:95, base.html:82)
209                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
210                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
211                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
212                  _tt_append(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
213                  _tt_append('</span> \xe8\xaf\x84\xe8\xae\xba\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<span class="badge">')  # base.html:110 (via base.html:95, base.html:82)
214                  _tt_tmp = SiteCollection.comment_count  # base.html:110 (via base.html:95, base.html:82)
215                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
216                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
217                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
218                  _tt_append(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
219                  _tt_append('</span> \xe6\x9c\x88\xe5\xba\xa6\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<!-- <span class="badge">')  # base.html:111 (via base.html:95, base.html:82)
220                  _tt_tmp = SiteCollection.article_month_count  # base.html:111 (via base.html:95, base.html:82)
221                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
222                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
223                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
224                  _tt_append(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
225                  _tt_append('</span> -->\n</p>\n<p>\n')  # base.html:114 (via base.html:95, base.html:82)
226                  for source in SiteCollection.article_sources:  # base.html:114 (via base.html:95, base.html:82)
227                      _tt_append('\n<a href="')  # base.html:115 (via base.html:95, base.html:82)
228                      _tt_tmp = reverse_url('articleSource', source.id)  # base.html:115 (via base.html:95, base.html:82)
229                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
230                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
231                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
232                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
233                      _tt_append('">')  # base.html:115 (via base.html:95, base.html:82)
234                      _tt_tmp = source.name  # base.html:115 (via base.html:95, base.html:82)
235                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
236                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
237                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
238                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
239                      _tt_append('</a>\xef\xbc\x9a\n<span class="badge">')  # base.html:116 (via base.html:95, base.html:82)
240                      _tt_tmp = source.articles_count  # base.html:116 (via base.html:95, base.html:82)
241                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
242                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
243                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
244                      _tt_append(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
245                      _tt_append('</span> ')  # base.html:116 (via base.html:95, base.html:82)
246                      pass  # base.html:114 (via base.html:95, base.html:82)
247                  _tt_append('\n</p>\n</div>\n')  # base.html:119 (via base.html:95, base.html:82)
248                  pass  # base.html:95 (via base.html:95, base.html:82)
249              _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
250              pass  # base.html:95 (via base.html:95, base.html:82)
251          _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
252          pass  # base.html:95 (via base.html:95, base.html:82)
253      _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
254      _tt_append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:124 (via base.html:82)
255      _tt_append('\n<div class="footer">\n<p class="footer-content">\n@2018\n<a target="_blank" href="https://github.com/wjkaola123/blog">blog</a> -\xe5\xbc\x80\xe6\xba\x90\xe7\x9a\x84\xe5\x88\x86\xe5\xb8\x83\xe5\xbc\x8f\xe5\x8d\x9a\xe5\xae\xa2\xe7\xb3\xbb\xe7\xbb\x9f ')  # base.html:128
256      if not current_user:  # base.html:128
257          _tt_append(' -\n<a href="')  # base.html:129
258          _tt_tmp = handler.login_url()  # base.html:129
259          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:129
260          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:129
261          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:129
262          _tt_append(_tt_tmp)  # base.html:129
263          _tt_append('">\n<span class="glyphicon glyphicon-wrench">\xe5\x90\x8e\xe5\x8f\xb0\xe7\xae\xa1\xe7\x90\x86</span>\n</a> ')  # base.html:131
264          pass  # base.html:128
265      _tt_append('\n</p>\n</div>\n<div class="btn-group-vertical floatButton">\n<button id="goTop" class="btn btn-default" title="\xe5\x8e\xbb\xe9\xa1\xb6\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-up"></span>\n</button>\n<button id="refresh" class="btn btn-default" title="\xe5\x88\xb7\xe6\x96\xb0" type="button">\n<span class="glyphicon glyphicon-refresh"></span>\n</button>\n<button id="goBottom" class="btn btn-default" title="\xe5\x8e\xbb\xe5\xba\x95\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-down"></span>\n</button>\n</div>\n')  # base.html:145
266      _tt_append('\n<script src="')  # base.html:146 (via base.html:145)
267      _tt_tmp = static_url('js/jquery-2.2.1.min.js')  # base.html:146 (via base.html:145)
268      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:146 (via base.html:145)
269      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:146 (via base.html:145)
270      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:146 (via base.html:145)
271      _tt_append(_tt_tmp)  # base.html:146 (via base.html:145)
272      _tt_append('"></script>\n<script src="')  # base.html:147 (via base.html:145)
273      _tt_tmp = static_url('js/bootstrap.min.js')  # base.html:147 (via base.html:145)
274      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:147 (via base.html:145)
275      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:147 (via base.html:145)
276      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:147 (via base.html:145)
277      _tt_append(_tt_tmp)  # base.html:147 (via base.html:145)
278      _tt_append('"></script>\n<script src="//cdn.bootcss.com/bootstrap-hover-dropdown/2.2.1/bootstrap-hover-dropdown.min.js"></script>\n<script src="')  # base.html:149 (via base.html:145)
279      _tt_tmp = static_url('js/floatButton.js')  # base.html:149 (via base.html:145)
280      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:149 (via base.html:145)
281      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:149 (via base.html:145)
282      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:149 (via base.html:145)
283      _tt_append(_tt_tmp)  # base.html:149 (via base.html:145)
284      _tt_append('"></script>\n')  # base.html:150 (via base.html:145)
285      _tt_append(' ')  # base.html:150
286      _tt_append(' ')  # base.html:150 (via base.html:150)
287      _tt_append('\n</body>\n</html>')  # base.html:153
288      return _tt_utf8('').join(_tt_buffer)  # base.html:0
2018-05-19 19:20:50,229 - tornado.application - web.py[line:1548] - ERROR - Uncaught exception GET / (::1)
HTTPServerRequest(protocol='http', host='localhost:8888', method='GET', uri='/', version='HTTP/1.1', remote_ip='::1', headers={'Accept-Language': 'zh-CN,zh;q=0.9', 'Accept-Encoding': 'gzip, deflate, br', 'Host': 'localhost:8888', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36', 'Connection': 'keep-alive', 'Cookie': 'uv_tag="2|1:0|10:1526707156|6:uv_tag|4:MTk=|d6b01a3c2fb07ad1d6932307f28288b31ef62f346eb3a47b020fa17eb84b46b3"', 'Cache-Control': 'max-age=0', 'Upgrade-Insecure-Requests': '1'})
Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\tornado\web.py", line 1469, in _execute
    result = yield result
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1024, in run
    yielded = self.gen.send(value)
  File "e:\httpdocs\blog\controller\home.py", line 26, in get
    pager=pager, article_search_params=article_search_params)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 719, in render
    html = self.render_string(template_name, **kwargs)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 823, in render_string
    t = loader.load(template_name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 307, in __init__
    self.code = self._generate_python(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 355, in _generate_python
    ancestors = self._get_ancestors(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 373, in _get_ancestors
    template = loader.load(chunk.name, self.name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 317, in __init__
    "exec", dont_inherit=True)
  File "base_html.generated.py", line 173
    if plugin.content
                    ^
SyntaxError: invalid syntax
2018-05-19 19:20:50,242 - tornado.access - web.py[line:1971] - ERROR - 500 GET / (::1) 194.00ms
2018-05-19 19:20:52,709 - tornado.application - template.py[line:320] - ERROR - base.html code:
  1  def _tt_execute():  # base.html:0
  2      _tt_buffer = []  # base.html:0
  3      _tt_append = _tt_buffer.append  # base.html:0
  4      _tt_append('<!DOCTYPE html> ')  # base.html:1
  5      from model.site_info import SiteCollection  # base.html:1
  6      _tt_append(' ')  # base.html:1
  7      from model.constants import Constants  # base.html:1
  8      _tt_append('\n<html>\n<head>\n<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta charset="UTF-8">\n<title>\n')  # base.html:8
  9      _tt_append(' ')  # base.html:8 (via base.html:8)
 10      _tt_tmp = SiteCollection.title  # base.html:8 (via base.html:8)
 11      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:8 (via base.html:8)
 12      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:8 (via base.html:8)
 13      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:8 (via base.html:8)
 14      _tt_append(_tt_tmp)  # base.html:8 (via base.html:8)
 15      _tt_append(' ')  # base.html:8 (via base.html:8)
 16      _tt_append('\n</title>\n')  # base.html:10
 17      _tt_append('\n<link href="')  # base.html:11 (via base.html:10)
 18      _tt_tmp = static_url('css/bootstrap.css')  # base.html:11 (via base.html:10)
 19      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:11 (via base.html:10)
 20      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:11 (via base.html:10)
 21      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:11 (via base.html:10)
 22      _tt_append(_tt_tmp)  # base.html:11 (via base.html:10)
 23      _tt_append('" rel="stylesheet">\n<link href="')  # base.html:12 (via base.html:10)
 24      _tt_tmp = static_url('css/common.css')  # base.html:12 (via base.html:10)
 25      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:12 (via base.html:10)
 26      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:12 (via base.html:10)
 27      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:12 (via base.html:10)
 28      _tt_append(_tt_tmp)  # base.html:12 (via base.html:10)
 29      _tt_append('" rel="stylesheet"> ')  # base.html:12 (via base.html:10)
 30      _tt_append(' ')  # base.html:12 (via base.html:12, base.html:10)
 31      _tt_append(' ')  # base.html:12 (via base.html:10)
 32      _tt_append('\n</head>\n<body>\n<header>\n<div class=\'header-top\'>\n<div class="container">\n<h2 class="blog-title"><a href="')  # base.html:19
 33      _tt_tmp = reverse_url('index')  # base.html:19
 34      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 35      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 36      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 37      _tt_append(_tt_tmp)  # base.html:19
 38      _tt_append('">')  # base.html:19
 39      _tt_tmp = SiteCollection.title  # base.html:19
 40      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 41      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 42      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 43      _tt_append(_tt_tmp)  # base.html:19
 44      _tt_append('</a></h2>\n<p class="lead signature">\n')  # base.html:21
 45      _tt_tmp = SiteCollection.signature  # base.html:21
 46      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:21
 47      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:21
 48      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:21
 49      _tt_append(_tt_tmp)  # base.html:21
 50      _tt_append('\n</p>\n</div>\n</div>\n<nav class="navbar navbar-')  # base.html:25
 51      _tt_tmp = SiteCollection.navbar  # base.html:25
 52      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:25
 53      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:25
 54      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:25
 55      _tt_append(_tt_tmp)  # base.html:25
 56      _tt_append('" role="navigation">\n<div class="container">\n<div class="navbar-header">\n<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">\n<span class="sr-only">\xe5\x88\x87\xe6\x8d\xa2\xe5\xaf\xbc\xe8\x88\xaa</span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</button>\n</div>\n<div class="collapse navbar-collapse">\n<ul class="nav navbar-nav">\n<li class=""><a href="/"><span class="glyphicon glyphicon-home"> \xe9\xa6\x96\xe9\xa1\xb5</span></a></li>\n')  # base.html:38
 57      for menu in SiteCollection.menus:  # base.html:38
 58          _tt_append(' ')  # base.html:38
 59          if menu.all_types:  # base.html:38
 60              _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n')  # base.html:41
 61              _tt_tmp = menu.name  # base.html:41
 62              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:41
 63              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:41
 64              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:41
 65              _tt_append(_tt_tmp)  # base.html:41
 66              _tt_append('\n<b class="caret"></b></a>\n<ul class="dropdown-menu">\n')  # base.html:44
 67              for article_type in menu.all_types:  # base.html:44
 68                  _tt_append(' ')  # base.html:44
 69                  if not article_type.is_hide:  # base.html:44
 70                      _tt_append('\n<li>\n<a href="')  # base.html:46
 71                      _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:46
 72                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:46
 73                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:46
 74                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:46
 75                      _tt_append(_tt_tmp)  # base.html:46
 76                      _tt_append('">\n')  # base.html:47
 77                      _tt_tmp = article_type.name  # base.html:47
 78                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:47
 79                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:47
 80                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:47
 81                      _tt_append(_tt_tmp)  # base.html:47
 82                      _tt_append('\n</a>\n</li>\n<li class="divider"></li>\n')  # base.html:51
 83                      pass  # base.html:44
 84                  _tt_append(' ')  # base.html:51
 85                  pass  # base.html:44
 86              _tt_append('\n</ul>\n</li>\n')  # base.html:54
 87              pass  # base.html:38
 88          _tt_append(' ')  # base.html:54
 89          pass  # base.html:38
 90      _tt_append(' ')  # base.html:54
 91      for article_type in SiteCollection.article_types_not_under_menu:  # base.html:54
 92          _tt_append(' ')  # base.html:54
 93          if not article_type.is_hide:  # base.html:54
 94              _tt_append('\n<li>\n<a href="')  # base.html:57
 95              _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:57
 96              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:57
 97              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:57
 98              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:57
 99              _tt_append(_tt_tmp)  # base.html:57
100              _tt_append('">\n')  # base.html:58
101              _tt_tmp = article_type.name  # base.html:58
102              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:58
103              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:58
104              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:58
105              _tt_append(_tt_tmp)  # base.html:58
106              _tt_append('\n</a>\n</li>\n')  # base.html:61
107              pass  # base.html:54
108          _tt_append(' ')  # base.html:61
109          pass  # base.html:54
110      _tt_append('\n</ul>\n<ul class="nav navbar-nav navbar-right">\n')  # base.html:64
111      if current_user:  # base.html:64
112          _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n<img style="height: 18px" src="')  # base.html:67
113          _tt_tmp = current_user['avatar']  # base.html:67
114          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:67
115          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:67
116          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:67
117          _tt_append(_tt_tmp)  # base.html:67
118          _tt_append('">\n')  # base.html:68
119          _tt_tmp = current_user['name']  # base.html:68
120          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:68
121          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:68
122          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:68
123          _tt_append(_tt_tmp)  # base.html:68
124          _tt_append(' <b class="caret"></b>\n</a>\n<ul class="dropdown-menu">\n<li><a href="')  # base.html:71
125          _tt_tmp = reverse_url('admin.article.action', 'submit')  # base.html:71
126          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:71
127          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:71
128          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:71
129          _tt_append(_tt_tmp)  # base.html:71
130          _tt_append('">\xe5\x8f\x91\xe8\xa1\xa8\xe5\x8d\x9a\xe6\x96\x87</a></li>\n<li><a href="')  # base.html:72
131          _tt_tmp = reverse_url('admin.account')  # base.html:72
132          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:72
133          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:72
134          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:72
135          _tt_append(_tt_tmp)  # base.html:72
136          _tt_append('">\xe7\xae\xa1\xe7\x90\x86\xe5\x8d\x9a\xe5\xae\xa2</a></li>\n<li><a href="')  # base.html:73
137          _tt_tmp = reverse_url('logout')  # base.html:73
138          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:73
139          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:73
140          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:73
141          _tt_append(_tt_tmp)  # base.html:73
142          _tt_append('">\xe9\x80\x80\xe5\x87\xba\xe7\x99\xbb\xe9\x99\x86</a></li>\n</ul>\n</li>\n')  # base.html:76
143          pass  # base.html:64
144      _tt_append('\n</ul>\n</div>\n</div>\n</nav>\n</header>\n')  # base.html:82
145      _tt_append('\n<div class="content">\n<div class="container">\n<div class="row">\n<div class="col-md-8 article">\n')  # base.html:87 (via base.html:82)
146      if handler.has_message():  # base.html:87 (via base.html:82)
147          _tt_append(' ')  # base.html:87 (via base.html:82)
148          for message in handler.read_messages():  # base.html:87 (via base.html:82)
149              _tt_append('\n<div class="alert alert-')  # base.html:88 (via base.html:82)
150              _tt_tmp = message['category']  # base.html:88 (via base.html:82)
151              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:88 (via base.html:82)
152              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:88 (via base.html:82)
153              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:88 (via base.html:82)
154              _tt_append(_tt_tmp)  # base.html:88 (via base.html:82)
155              _tt_append(' alert-dismissable">\n<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button> ')  # base.html:89 (via base.html:82)
156              _tt_tmp = message['message']  # base.html:89 (via base.html:82)
157              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:89 (via base.html:82)
158              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:89 (via base.html:82)
159              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:89 (via base.html:82)
160              _tt_append(_tt_tmp)  # base.html:89 (via base.html:82)
161              _tt_append('\n</div>\n')  # base.html:92 (via base.html:82)
162              pass  # base.html:87 (via base.html:82)
163          _tt_append(' ')  # base.html:92 (via base.html:82)
164          pass  # base.html:87 (via base.html:82)
165      _tt_append(' ')  # base.html:92 (via base.html:82)
166      _tt_append(' ')  # base.html:92 (via base.html:92, base.html:82)
167      _tt_append('\n</div>\n<div class="col-md-4 blog_nav">\n')  # base.html:95 (via base.html:82)
168      _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
169      for plugin in SiteCollection.plugins:  # base.html:95 (via base.html:95, base.html:82)
170          _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
171          if not plugin.disabled:  # base.html:95 (via base.html:95, base.html:82)
172              _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
173              if plugin.content
174                      != Constants.SYSTEM_PLUGIN:  # base.html:95 (via base.html:95, base.html:82)
175                  _tt_append('\n<div id="')  # base.html:97 (via base.html:95, base.html:82)
176                  _tt_tmp = plugin.title  # base.html:97 (via base.html:95, base.html:82)
177                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
178                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
179                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
180                  _tt_append(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
181                  _tt_append('" class="entry-box">\n<h5><strong>')  # base.html:98 (via base.html:95, base.html:82)
182                  _tt_tmp = plugin.title  # base.html:98 (via base.html:95, base.html:82)
183                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
184                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
185                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
186                  _tt_append(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
187                  _tt_append('</strong></h5>\n')  # base.html:99 (via base.html:95, base.html:82)
188                  _tt_tmp = plugin.content  # base.html:99 (via base.html:95, base.html:82)
189                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
190                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:99 (via base.html:95, base.html:82)
191                  _tt_append(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
192                  _tt_append('\n</div>\n')  # base.html:101 (via base.html:95, base.html:82)
193                  pass  # base.html:101 (via base.html:95, base.html:82)
194              else:  # base.html:101 (via base.html:95, base.html:82)
195                  _tt_append('\n<div class="entry-box">\n<h5><strong>\xe5\x8d\x9a\xe5\xae\xa2\xe7\xbb\x9f\xe8\xae\xa1</strong></h5>\n<p>\n\xe4\xbb\x8a\xe6\x97\xa5PV\xef\xbc\x9a<span class="badge">')  # base.html:105 (via base.html:95, base.html:82)
196                  _tt_tmp = SiteCollection.pv  # base.html:105 (via base.html:95, base.html:82)
197                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
198                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
199                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
200                  _tt_append(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
201                  _tt_append('</span> \xe4\xbb\x8a\xe6\x97\xa5UV\xef\xbc\x9a\n<span class="badge">')  # base.html:106 (via base.html:95, base.html:82)
202                  _tt_tmp = SiteCollection.uv  # base.html:106 (via base.html:95, base.html:82)
203                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
204                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
205                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
206                  _tt_append(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
207                  _tt_append('</span>\n</p>\n<p>\n\xe5\x8d\x9a\xe6\x96\x87\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a<span class="badge">')  # base.html:109 (via base.html:95, base.html:82)
208                  _tt_tmp = SiteCollection.article_count  # base.html:109 (via base.html:95, base.html:82)
209                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
210                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
211                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
212                  _tt_append(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
213                  _tt_append('</span> \xe8\xaf\x84\xe8\xae\xba\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<span class="badge">')  # base.html:110 (via base.html:95, base.html:82)
214                  _tt_tmp = SiteCollection.comment_count  # base.html:110 (via base.html:95, base.html:82)
215                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
216                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
217                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
218                  _tt_append(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
219                  _tt_append('</span> \xe6\x9c\x88\xe5\xba\xa6\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<!-- <span class="badge">')  # base.html:111 (via base.html:95, base.html:82)
220                  _tt_tmp = SiteCollection.article_month_count  # base.html:111 (via base.html:95, base.html:82)
221                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
222                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
223                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
224                  _tt_append(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
225                  _tt_append('</span> -->\n</p>\n<p>\n')  # base.html:114 (via base.html:95, base.html:82)
226                  for source in SiteCollection.article_sources:  # base.html:114 (via base.html:95, base.html:82)
227                      _tt_append('\n<a href="')  # base.html:115 (via base.html:95, base.html:82)
228                      _tt_tmp = reverse_url('articleSource', source.id)  # base.html:115 (via base.html:95, base.html:82)
229                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
230                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
231                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
232                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
233                      _tt_append('">')  # base.html:115 (via base.html:95, base.html:82)
234                      _tt_tmp = source.name  # base.html:115 (via base.html:95, base.html:82)
235                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
236                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
237                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
238                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
239                      _tt_append('</a>\xef\xbc\x9a\n<span class="badge">')  # base.html:116 (via base.html:95, base.html:82)
240                      _tt_tmp = source.articles_count  # base.html:116 (via base.html:95, base.html:82)
241                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
242                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
243                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
244                      _tt_append(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
245                      _tt_append('</span> ')  # base.html:116 (via base.html:95, base.html:82)
246                      pass  # base.html:114 (via base.html:95, base.html:82)
247                  _tt_append('\n</p>\n</div>\n')  # base.html:119 (via base.html:95, base.html:82)
248                  pass  # base.html:95 (via base.html:95, base.html:82)
249              _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
250              pass  # base.html:95 (via base.html:95, base.html:82)
251          _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
252          pass  # base.html:95 (via base.html:95, base.html:82)
253      _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
254      _tt_append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:124 (via base.html:82)
255      _tt_append('\n<div class="footer">\n<p class="footer-content">\n@2018\n<a target="_blank" href="https://github.com/wjkaola123/blog">blog</a> -\xe5\xbc\x80\xe6\xba\x90\xe7\x9a\x84\xe5\x88\x86\xe5\xb8\x83\xe5\xbc\x8f\xe5\x8d\x9a\xe5\xae\xa2\xe7\xb3\xbb\xe7\xbb\x9f ')  # base.html:128
256      if not current_user:  # base.html:128
257          _tt_append(' -\n<a href="')  # base.html:129
258          _tt_tmp = handler.login_url()  # base.html:129
259          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:129
260          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:129
261          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:129
262          _tt_append(_tt_tmp)  # base.html:129
263          _tt_append('">\n<span class="glyphicon glyphicon-wrench">\xe5\x90\x8e\xe5\x8f\xb0\xe7\xae\xa1\xe7\x90\x86</span>\n</a> ')  # base.html:131
264          pass  # base.html:128
265      _tt_append('\n</p>\n</div>\n<div class="btn-group-vertical floatButton">\n<button id="goTop" class="btn btn-default" title="\xe5\x8e\xbb\xe9\xa1\xb6\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-up"></span>\n</button>\n<button id="refresh" class="btn btn-default" title="\xe5\x88\xb7\xe6\x96\xb0" type="button">\n<span class="glyphicon glyphicon-refresh"></span>\n</button>\n<button id="goBottom" class="btn btn-default" title="\xe5\x8e\xbb\xe5\xba\x95\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-down"></span>\n</button>\n</div>\n')  # base.html:145
266      _tt_append('\n<script src="')  # base.html:146 (via base.html:145)
267      _tt_tmp = static_url('js/jquery-2.2.1.min.js')  # base.html:146 (via base.html:145)
268      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:146 (via base.html:145)
269      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:146 (via base.html:145)
270      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:146 (via base.html:145)
271      _tt_append(_tt_tmp)  # base.html:146 (via base.html:145)
272      _tt_append('"></script>\n<script src="')  # base.html:147 (via base.html:145)
273      _tt_tmp = static_url('js/bootstrap.min.js')  # base.html:147 (via base.html:145)
274      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:147 (via base.html:145)
275      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:147 (via base.html:145)
276      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:147 (via base.html:145)
277      _tt_append(_tt_tmp)  # base.html:147 (via base.html:145)
278      _tt_append('"></script>\n<script src="//cdn.bootcss.com/bootstrap-hover-dropdown/2.2.1/bootstrap-hover-dropdown.min.js"></script>\n<script src="')  # base.html:149 (via base.html:145)
279      _tt_tmp = static_url('js/floatButton.js')  # base.html:149 (via base.html:145)
280      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:149 (via base.html:145)
281      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:149 (via base.html:145)
282      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:149 (via base.html:145)
283      _tt_append(_tt_tmp)  # base.html:149 (via base.html:145)
284      _tt_append('"></script>\n')  # base.html:150 (via base.html:145)
285      _tt_append(' ')  # base.html:150
286      _tt_append(' ')  # base.html:150 (via base.html:150)
287      _tt_append('\n</body>\n</html>')  # base.html:153
288      return _tt_utf8('').join(_tt_buffer)  # base.html:0
2018-05-19 19:20:52,714 - tornado.application - web.py[line:1548] - ERROR - Uncaught exception GET / (::1)
HTTPServerRequest(protocol='http', host='localhost:8888', method='GET', uri='/', version='HTTP/1.1', remote_ip='::1', headers={'Accept-Language': 'zh-CN,zh;q=0.9', 'Accept-Encoding': 'gzip, deflate, br', 'Host': 'localhost:8888', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36', 'Connection': 'keep-alive', 'Cookie': 'uv_tag="2|1:0|10:1526707156|6:uv_tag|4:MTk=|d6b01a3c2fb07ad1d6932307f28288b31ef62f346eb3a47b020fa17eb84b46b3"', 'Cache-Control': 'max-age=0', 'Upgrade-Insecure-Requests': '1'})
Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\tornado\web.py", line 1469, in _execute
    result = yield result
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1024, in run
    yielded = self.gen.send(value)
  File "e:\httpdocs\blog\controller\home.py", line 26, in get
    pager=pager, article_search_params=article_search_params)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 719, in render
    html = self.render_string(template_name, **kwargs)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 823, in render_string
    t = loader.load(template_name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 307, in __init__
    self.code = self._generate_python(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 355, in _generate_python
    ancestors = self._get_ancestors(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 373, in _get_ancestors
    template = loader.load(chunk.name, self.name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 317, in __init__
    "exec", dont_inherit=True)
  File "base_html.generated.py", line 173
    if plugin.content
                    ^
SyntaxError: invalid syntax
2018-05-19 19:20:52,727 - tornado.access - web.py[line:1971] - ERROR - 500 GET / (::1) 72.00ms
2018-05-19 19:20:55,078 - tornado.application - template.py[line:320] - ERROR - base.html code:
  1  def _tt_execute():  # base.html:0
  2      _tt_buffer = []  # base.html:0
  3      _tt_append = _tt_buffer.append  # base.html:0
  4      _tt_append('<!DOCTYPE html> ')  # base.html:1
  5      from model.site_info import SiteCollection  # base.html:1
  6      _tt_append(' ')  # base.html:1
  7      from model.constants import Constants  # base.html:1
  8      _tt_append('\n<html>\n<head>\n<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta charset="UTF-8">\n<title>\n')  # base.html:8
  9      _tt_append(' ')  # base.html:8 (via base.html:8)
 10      _tt_tmp = SiteCollection.title  # base.html:8 (via base.html:8)
 11      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:8 (via base.html:8)
 12      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:8 (via base.html:8)
 13      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:8 (via base.html:8)
 14      _tt_append(_tt_tmp)  # base.html:8 (via base.html:8)
 15      _tt_append(' ')  # base.html:8 (via base.html:8)
 16      _tt_append('\n</title>\n')  # base.html:10
 17      _tt_append('\n<link href="')  # base.html:11 (via base.html:10)
 18      _tt_tmp = static_url('css/bootstrap.css')  # base.html:11 (via base.html:10)
 19      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:11 (via base.html:10)
 20      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:11 (via base.html:10)
 21      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:11 (via base.html:10)
 22      _tt_append(_tt_tmp)  # base.html:11 (via base.html:10)
 23      _tt_append('" rel="stylesheet">\n<link href="')  # base.html:12 (via base.html:10)
 24      _tt_tmp = static_url('css/common.css')  # base.html:12 (via base.html:10)
 25      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:12 (via base.html:10)
 26      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:12 (via base.html:10)
 27      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:12 (via base.html:10)
 28      _tt_append(_tt_tmp)  # base.html:12 (via base.html:10)
 29      _tt_append('" rel="stylesheet"> ')  # base.html:12 (via base.html:10)
 30      _tt_append(' ')  # base.html:12 (via base.html:12, base.html:10)
 31      _tt_append(' ')  # base.html:12 (via base.html:10)
 32      _tt_append('\n</head>\n<body>\n<header>\n<div class=\'header-top\'>\n<div class="container">\n<h2 class="blog-title"><a href="')  # base.html:19
 33      _tt_tmp = reverse_url('index')  # base.html:19
 34      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 35      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 36      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 37      _tt_append(_tt_tmp)  # base.html:19
 38      _tt_append('">')  # base.html:19
 39      _tt_tmp = SiteCollection.title  # base.html:19
 40      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 41      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 42      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 43      _tt_append(_tt_tmp)  # base.html:19
 44      _tt_append('</a></h2>\n<p class="lead signature">\n')  # base.html:21
 45      _tt_tmp = SiteCollection.signature  # base.html:21
 46      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:21
 47      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:21
 48      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:21
 49      _tt_append(_tt_tmp)  # base.html:21
 50      _tt_append('\n</p>\n</div>\n</div>\n<nav class="navbar navbar-')  # base.html:25
 51      _tt_tmp = SiteCollection.navbar  # base.html:25
 52      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:25
 53      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:25
 54      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:25
 55      _tt_append(_tt_tmp)  # base.html:25
 56      _tt_append('" role="navigation">\n<div class="container">\n<div class="navbar-header">\n<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">\n<span class="sr-only">\xe5\x88\x87\xe6\x8d\xa2\xe5\xaf\xbc\xe8\x88\xaa</span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</button>\n</div>\n<div class="collapse navbar-collapse">\n<ul class="nav navbar-nav">\n<li class=""><a href="/"><span class="glyphicon glyphicon-home"> \xe9\xa6\x96\xe9\xa1\xb5</span></a></li>\n')  # base.html:38
 57      for menu in SiteCollection.menus:  # base.html:38
 58          _tt_append(' ')  # base.html:38
 59          if menu.all_types:  # base.html:38
 60              _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n')  # base.html:41
 61              _tt_tmp = menu.name  # base.html:41
 62              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:41
 63              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:41
 64              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:41
 65              _tt_append(_tt_tmp)  # base.html:41
 66              _tt_append('\n<b class="caret"></b></a>\n<ul class="dropdown-menu">\n')  # base.html:44
 67              for article_type in menu.all_types:  # base.html:44
 68                  _tt_append(' ')  # base.html:44
 69                  if not article_type.is_hide:  # base.html:44
 70                      _tt_append('\n<li>\n<a href="')  # base.html:46
 71                      _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:46
 72                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:46
 73                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:46
 74                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:46
 75                      _tt_append(_tt_tmp)  # base.html:46
 76                      _tt_append('">\n')  # base.html:47
 77                      _tt_tmp = article_type.name  # base.html:47
 78                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:47
 79                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:47
 80                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:47
 81                      _tt_append(_tt_tmp)  # base.html:47
 82                      _tt_append('\n</a>\n</li>\n<li class="divider"></li>\n')  # base.html:51
 83                      pass  # base.html:44
 84                  _tt_append(' ')  # base.html:51
 85                  pass  # base.html:44
 86              _tt_append('\n</ul>\n</li>\n')  # base.html:54
 87              pass  # base.html:38
 88          _tt_append(' ')  # base.html:54
 89          pass  # base.html:38
 90      _tt_append(' ')  # base.html:54
 91      for article_type in SiteCollection.article_types_not_under_menu:  # base.html:54
 92          _tt_append(' ')  # base.html:54
 93          if not article_type.is_hide:  # base.html:54
 94              _tt_append('\n<li>\n<a href="')  # base.html:57
 95              _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:57
 96              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:57
 97              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:57
 98              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:57
 99              _tt_append(_tt_tmp)  # base.html:57
100              _tt_append('">\n')  # base.html:58
101              _tt_tmp = article_type.name  # base.html:58
102              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:58
103              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:58
104              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:58
105              _tt_append(_tt_tmp)  # base.html:58
106              _tt_append('\n</a>\n</li>\n')  # base.html:61
107              pass  # base.html:54
108          _tt_append(' ')  # base.html:61
109          pass  # base.html:54
110      _tt_append('\n</ul>\n<ul class="nav navbar-nav navbar-right">\n')  # base.html:64
111      if current_user:  # base.html:64
112          _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n<img style="height: 18px" src="')  # base.html:67
113          _tt_tmp = current_user['avatar']  # base.html:67
114          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:67
115          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:67
116          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:67
117          _tt_append(_tt_tmp)  # base.html:67
118          _tt_append('">\n')  # base.html:68
119          _tt_tmp = current_user['name']  # base.html:68
120          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:68
121          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:68
122          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:68
123          _tt_append(_tt_tmp)  # base.html:68
124          _tt_append(' <b class="caret"></b>\n</a>\n<ul class="dropdown-menu">\n<li><a href="')  # base.html:71
125          _tt_tmp = reverse_url('admin.article.action', 'submit')  # base.html:71
126          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:71
127          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:71
128          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:71
129          _tt_append(_tt_tmp)  # base.html:71
130          _tt_append('">\xe5\x8f\x91\xe8\xa1\xa8\xe5\x8d\x9a\xe6\x96\x87</a></li>\n<li><a href="')  # base.html:72
131          _tt_tmp = reverse_url('admin.account')  # base.html:72
132          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:72
133          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:72
134          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:72
135          _tt_append(_tt_tmp)  # base.html:72
136          _tt_append('">\xe7\xae\xa1\xe7\x90\x86\xe5\x8d\x9a\xe5\xae\xa2</a></li>\n<li><a href="')  # base.html:73
137          _tt_tmp = reverse_url('logout')  # base.html:73
138          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:73
139          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:73
140          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:73
141          _tt_append(_tt_tmp)  # base.html:73
142          _tt_append('">\xe9\x80\x80\xe5\x87\xba\xe7\x99\xbb\xe9\x99\x86</a></li>\n</ul>\n</li>\n')  # base.html:76
143          pass  # base.html:64
144      _tt_append('\n</ul>\n</div>\n</div>\n</nav>\n</header>\n')  # base.html:82
145      _tt_append('\n<div class="content">\n<div class="container">\n<div class="row">\n<div class="col-md-8 article">\n')  # base.html:87 (via base.html:82)
146      if handler.has_message():  # base.html:87 (via base.html:82)
147          _tt_append(' ')  # base.html:87 (via base.html:82)
148          for message in handler.read_messages():  # base.html:87 (via base.html:82)
149              _tt_append('\n<div class="alert alert-')  # base.html:88 (via base.html:82)
150              _tt_tmp = message['category']  # base.html:88 (via base.html:82)
151              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:88 (via base.html:82)
152              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:88 (via base.html:82)
153              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:88 (via base.html:82)
154              _tt_append(_tt_tmp)  # base.html:88 (via base.html:82)
155              _tt_append(' alert-dismissable">\n<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button> ')  # base.html:89 (via base.html:82)
156              _tt_tmp = message['message']  # base.html:89 (via base.html:82)
157              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:89 (via base.html:82)
158              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:89 (via base.html:82)
159              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:89 (via base.html:82)
160              _tt_append(_tt_tmp)  # base.html:89 (via base.html:82)
161              _tt_append('\n</div>\n')  # base.html:92 (via base.html:82)
162              pass  # base.html:87 (via base.html:82)
163          _tt_append(' ')  # base.html:92 (via base.html:82)
164          pass  # base.html:87 (via base.html:82)
165      _tt_append(' ')  # base.html:92 (via base.html:82)
166      _tt_append(' ')  # base.html:92 (via base.html:92, base.html:82)
167      _tt_append('\n</div>\n<div class="col-md-4 blog_nav">\n')  # base.html:95 (via base.html:82)
168      _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
169      for plugin in SiteCollection.plugins:  # base.html:95 (via base.html:95, base.html:82)
170          _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
171          if not plugin.disabled:  # base.html:95 (via base.html:95, base.html:82)
172              _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
173              if plugin.content
174                      != Constants.SYSTEM_PLUGIN:  # base.html:95 (via base.html:95, base.html:82)
175                  _tt_append('\n<div id="')  # base.html:97 (via base.html:95, base.html:82)
176                  _tt_tmp = plugin.title  # base.html:97 (via base.html:95, base.html:82)
177                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
178                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
179                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
180                  _tt_append(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
181                  _tt_append('" class="entry-box">\n<h5><strong>')  # base.html:98 (via base.html:95, base.html:82)
182                  _tt_tmp = plugin.title  # base.html:98 (via base.html:95, base.html:82)
183                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
184                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
185                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
186                  _tt_append(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
187                  _tt_append('</strong></h5>\n')  # base.html:99 (via base.html:95, base.html:82)
188                  _tt_tmp = plugin.content  # base.html:99 (via base.html:95, base.html:82)
189                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
190                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:99 (via base.html:95, base.html:82)
191                  _tt_append(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
192                  _tt_append('\n</div>\n')  # base.html:101 (via base.html:95, base.html:82)
193                  pass  # base.html:101 (via base.html:95, base.html:82)
194              else:  # base.html:101 (via base.html:95, base.html:82)
195                  _tt_append('\n<div class="entry-box">\n<h5><strong>\xe5\x8d\x9a\xe5\xae\xa2\xe7\xbb\x9f\xe8\xae\xa1</strong></h5>\n<p>\n\xe4\xbb\x8a\xe6\x97\xa5PV\xef\xbc\x9a<span class="badge">')  # base.html:105 (via base.html:95, base.html:82)
196                  _tt_tmp = SiteCollection.pv  # base.html:105 (via base.html:95, base.html:82)
197                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
198                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
199                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
200                  _tt_append(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
201                  _tt_append('</span> \xe4\xbb\x8a\xe6\x97\xa5UV\xef\xbc\x9a\n<span class="badge">')  # base.html:106 (via base.html:95, base.html:82)
202                  _tt_tmp = SiteCollection.uv  # base.html:106 (via base.html:95, base.html:82)
203                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
204                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
205                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
206                  _tt_append(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
207                  _tt_append('</span>\n</p>\n<p>\n\xe5\x8d\x9a\xe6\x96\x87\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a<span class="badge">')  # base.html:109 (via base.html:95, base.html:82)
208                  _tt_tmp = SiteCollection.article_count  # base.html:109 (via base.html:95, base.html:82)
209                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
210                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
211                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
212                  _tt_append(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
213                  _tt_append('</span> \xe8\xaf\x84\xe8\xae\xba\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<span class="badge">')  # base.html:110 (via base.html:95, base.html:82)
214                  _tt_tmp = SiteCollection.comment_count  # base.html:110 (via base.html:95, base.html:82)
215                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
216                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
217                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
218                  _tt_append(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
219                  _tt_append('</span> \xe6\x9c\x88\xe5\xba\xa6\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<!-- <span class="badge">')  # base.html:111 (via base.html:95, base.html:82)
220                  _tt_tmp = SiteCollection.article_month_count  # base.html:111 (via base.html:95, base.html:82)
221                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
222                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
223                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
224                  _tt_append(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
225                  _tt_append('</span> -->\n</p>\n<p>\n')  # base.html:114 (via base.html:95, base.html:82)
226                  for source in SiteCollection.article_sources:  # base.html:114 (via base.html:95, base.html:82)
227                      _tt_append('\n<a href="')  # base.html:115 (via base.html:95, base.html:82)
228                      _tt_tmp = reverse_url('articleSource', source.id)  # base.html:115 (via base.html:95, base.html:82)
229                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
230                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
231                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
232                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
233                      _tt_append('">')  # base.html:115 (via base.html:95, base.html:82)
234                      _tt_tmp = source.name  # base.html:115 (via base.html:95, base.html:82)
235                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
236                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
237                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
238                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
239                      _tt_append('</a>\xef\xbc\x9a\n<span class="badge">')  # base.html:116 (via base.html:95, base.html:82)
240                      _tt_tmp = source.articles_count  # base.html:116 (via base.html:95, base.html:82)
241                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
242                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
243                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
244                      _tt_append(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
245                      _tt_append('</span> ')  # base.html:116 (via base.html:95, base.html:82)
246                      pass  # base.html:114 (via base.html:95, base.html:82)
247                  _tt_append('\n</p>\n</div>\n')  # base.html:119 (via base.html:95, base.html:82)
248                  pass  # base.html:95 (via base.html:95, base.html:82)
249              _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
250              pass  # base.html:95 (via base.html:95, base.html:82)
251          _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
252          pass  # base.html:95 (via base.html:95, base.html:82)
253      _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
254      _tt_append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:124 (via base.html:82)
255      _tt_append('\n<div class="footer">\n<p class="footer-content">\n@2018\n<a target="_blank" href="https://github.com/wjkaola123/blog">blog</a> -\xe5\xbc\x80\xe6\xba\x90\xe7\x9a\x84\xe5\x88\x86\xe5\xb8\x83\xe5\xbc\x8f\xe5\x8d\x9a\xe5\xae\xa2\xe7\xb3\xbb\xe7\xbb\x9f ')  # base.html:128
256      if not current_user:  # base.html:128
257          _tt_append(' -\n<a href="')  # base.html:129
258          _tt_tmp = handler.login_url()  # base.html:129
259          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:129
260          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:129
261          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:129
262          _tt_append(_tt_tmp)  # base.html:129
263          _tt_append('">\n<span class="glyphicon glyphicon-wrench">\xe5\x90\x8e\xe5\x8f\xb0\xe7\xae\xa1\xe7\x90\x86</span>\n</a> ')  # base.html:131
264          pass  # base.html:128
265      _tt_append('\n</p>\n</div>\n<div class="btn-group-vertical floatButton">\n<button id="goTop" class="btn btn-default" title="\xe5\x8e\xbb\xe9\xa1\xb6\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-up"></span>\n</button>\n<button id="refresh" class="btn btn-default" title="\xe5\x88\xb7\xe6\x96\xb0" type="button">\n<span class="glyphicon glyphicon-refresh"></span>\n</button>\n<button id="goBottom" class="btn btn-default" title="\xe5\x8e\xbb\xe5\xba\x95\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-down"></span>\n</button>\n</div>\n')  # base.html:145
266      _tt_append('\n<script src="')  # base.html:146 (via base.html:145)
267      _tt_tmp = static_url('js/jquery-2.2.1.min.js')  # base.html:146 (via base.html:145)
268      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:146 (via base.html:145)
269      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:146 (via base.html:145)
270      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:146 (via base.html:145)
271      _tt_append(_tt_tmp)  # base.html:146 (via base.html:145)
272      _tt_append('"></script>\n<script src="')  # base.html:147 (via base.html:145)
273      _tt_tmp = static_url('js/bootstrap.min.js')  # base.html:147 (via base.html:145)
274      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:147 (via base.html:145)
275      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:147 (via base.html:145)
276      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:147 (via base.html:145)
277      _tt_append(_tt_tmp)  # base.html:147 (via base.html:145)
278      _tt_append('"></script>\n<script src="//cdn.bootcss.com/bootstrap-hover-dropdown/2.2.1/bootstrap-hover-dropdown.min.js"></script>\n<script src="')  # base.html:149 (via base.html:145)
279      _tt_tmp = static_url('js/floatButton.js')  # base.html:149 (via base.html:145)
280      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:149 (via base.html:145)
281      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:149 (via base.html:145)
282      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:149 (via base.html:145)
283      _tt_append(_tt_tmp)  # base.html:149 (via base.html:145)
284      _tt_append('"></script>\n')  # base.html:150 (via base.html:145)
285      _tt_append(' ')  # base.html:150
286      _tt_append(' ')  # base.html:150 (via base.html:150)
287      _tt_append('\n</body>\n</html>')  # base.html:153
288      return _tt_utf8('').join(_tt_buffer)  # base.html:0
2018-05-19 19:20:55,082 - tornado.application - web.py[line:1548] - ERROR - Uncaught exception GET / (::1)
HTTPServerRequest(protocol='http', host='localhost:8888', method='GET', uri='/', version='HTTP/1.1', remote_ip='::1', headers={'Accept-Language': 'zh-CN,zh;q=0.9', 'Accept-Encoding': 'gzip, deflate, br', 'Host': 'localhost:8888', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36', 'Connection': 'keep-alive', 'Cookie': 'uv_tag="2|1:0|10:1526707156|6:uv_tag|4:MTk=|d6b01a3c2fb07ad1d6932307f28288b31ef62f346eb3a47b020fa17eb84b46b3"', 'Cache-Control': 'max-age=0', 'Upgrade-Insecure-Requests': '1'})
Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\tornado\web.py", line 1469, in _execute
    result = yield result
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1024, in run
    yielded = self.gen.send(value)
  File "e:\httpdocs\blog\controller\home.py", line 26, in get
    pager=pager, article_search_params=article_search_params)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 719, in render
    html = self.render_string(template_name, **kwargs)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 823, in render_string
    t = loader.load(template_name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 307, in __init__
    self.code = self._generate_python(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 355, in _generate_python
    ancestors = self._get_ancestors(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 373, in _get_ancestors
    template = loader.load(chunk.name, self.name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 317, in __init__
    "exec", dont_inherit=True)
  File "base_html.generated.py", line 173
    if plugin.content
                    ^
SyntaxError: invalid syntax
2018-05-19 19:20:55,092 - tornado.access - web.py[line:1971] - ERROR - 500 GET / (::1) 71.00ms
2018-05-19 19:20:57,260 - tornado.application - template.py[line:320] - ERROR - base.html code:
  1  def _tt_execute():  # base.html:0
  2      _tt_buffer = []  # base.html:0
  3      _tt_append = _tt_buffer.append  # base.html:0
  4      _tt_append('<!DOCTYPE html> ')  # base.html:1
  5      from model.site_info import SiteCollection  # base.html:1
  6      _tt_append(' ')  # base.html:1
  7      from model.constants import Constants  # base.html:1
  8      _tt_append('\n<html>\n<head>\n<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta charset="UTF-8">\n<title>\n')  # base.html:8
  9      _tt_append(' ')  # base.html:8 (via base.html:8)
 10      _tt_tmp = SiteCollection.title  # base.html:8 (via base.html:8)
 11      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:8 (via base.html:8)
 12      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:8 (via base.html:8)
 13      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:8 (via base.html:8)
 14      _tt_append(_tt_tmp)  # base.html:8 (via base.html:8)
 15      _tt_append(' ')  # base.html:8 (via base.html:8)
 16      _tt_append('\n</title>\n')  # base.html:10
 17      _tt_append('\n<link href="')  # base.html:11 (via base.html:10)
 18      _tt_tmp = static_url('css/bootstrap.css')  # base.html:11 (via base.html:10)
 19      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:11 (via base.html:10)
 20      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:11 (via base.html:10)
 21      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:11 (via base.html:10)
 22      _tt_append(_tt_tmp)  # base.html:11 (via base.html:10)
 23      _tt_append('" rel="stylesheet">\n<link href="')  # base.html:12 (via base.html:10)
 24      _tt_tmp = static_url('css/common.css')  # base.html:12 (via base.html:10)
 25      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:12 (via base.html:10)
 26      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:12 (via base.html:10)
 27      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:12 (via base.html:10)
 28      _tt_append(_tt_tmp)  # base.html:12 (via base.html:10)
 29      _tt_append('" rel="stylesheet"> ')  # base.html:12 (via base.html:10)
 30      _tt_append(' ')  # base.html:12 (via base.html:12, base.html:10)
 31      _tt_append(' ')  # base.html:12 (via base.html:10)
 32      _tt_append('\n</head>\n<body>\n<header>\n<div class=\'header-top\'>\n<div class="container">\n<h2 class="blog-title"><a href="')  # base.html:19
 33      _tt_tmp = reverse_url('index')  # base.html:19
 34      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 35      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 36      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 37      _tt_append(_tt_tmp)  # base.html:19
 38      _tt_append('">')  # base.html:19
 39      _tt_tmp = SiteCollection.title  # base.html:19
 40      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 41      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 42      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 43      _tt_append(_tt_tmp)  # base.html:19
 44      _tt_append('</a></h2>\n<p class="lead signature">\n')  # base.html:21
 45      _tt_tmp = SiteCollection.signature  # base.html:21
 46      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:21
 47      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:21
 48      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:21
 49      _tt_append(_tt_tmp)  # base.html:21
 50      _tt_append('\n</p>\n</div>\n</div>\n<nav class="navbar navbar-')  # base.html:25
 51      _tt_tmp = SiteCollection.navbar  # base.html:25
 52      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:25
 53      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:25
 54      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:25
 55      _tt_append(_tt_tmp)  # base.html:25
 56      _tt_append('" role="navigation">\n<div class="container">\n<div class="navbar-header">\n<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">\n<span class="sr-only">\xe5\x88\x87\xe6\x8d\xa2\xe5\xaf\xbc\xe8\x88\xaa</span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</button>\n</div>\n<div class="collapse navbar-collapse">\n<ul class="nav navbar-nav">\n<li class=""><a href="/"><span class="glyphicon glyphicon-home"> \xe9\xa6\x96\xe9\xa1\xb5</span></a></li>\n')  # base.html:38
 57      for menu in SiteCollection.menus:  # base.html:38
 58          _tt_append(' ')  # base.html:38
 59          if menu.all_types:  # base.html:38
 60              _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n')  # base.html:41
 61              _tt_tmp = menu.name  # base.html:41
 62              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:41
 63              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:41
 64              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:41
 65              _tt_append(_tt_tmp)  # base.html:41
 66              _tt_append('\n<b class="caret"></b></a>\n<ul class="dropdown-menu">\n')  # base.html:44
 67              for article_type in menu.all_types:  # base.html:44
 68                  _tt_append(' ')  # base.html:44
 69                  if not article_type.is_hide:  # base.html:44
 70                      _tt_append('\n<li>\n<a href="')  # base.html:46
 71                      _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:46
 72                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:46
 73                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:46
 74                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:46
 75                      _tt_append(_tt_tmp)  # base.html:46
 76                      _tt_append('">\n')  # base.html:47
 77                      _tt_tmp = article_type.name  # base.html:47
 78                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:47
 79                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:47
 80                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:47
 81                      _tt_append(_tt_tmp)  # base.html:47
 82                      _tt_append('\n</a>\n</li>\n<li class="divider"></li>\n')  # base.html:51
 83                      pass  # base.html:44
 84                  _tt_append(' ')  # base.html:51
 85                  pass  # base.html:44
 86              _tt_append('\n</ul>\n</li>\n')  # base.html:54
 87              pass  # base.html:38
 88          _tt_append(' ')  # base.html:54
 89          pass  # base.html:38
 90      _tt_append(' ')  # base.html:54
 91      for article_type in SiteCollection.article_types_not_under_menu:  # base.html:54
 92          _tt_append(' ')  # base.html:54
 93          if not article_type.is_hide:  # base.html:54
 94              _tt_append('\n<li>\n<a href="')  # base.html:57
 95              _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:57
 96              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:57
 97              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:57
 98              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:57
 99              _tt_append(_tt_tmp)  # base.html:57
100              _tt_append('">\n')  # base.html:58
101              _tt_tmp = article_type.name  # base.html:58
102              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:58
103              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:58
104              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:58
105              _tt_append(_tt_tmp)  # base.html:58
106              _tt_append('\n</a>\n</li>\n')  # base.html:61
107              pass  # base.html:54
108          _tt_append(' ')  # base.html:61
109          pass  # base.html:54
110      _tt_append('\n</ul>\n<ul class="nav navbar-nav navbar-right">\n')  # base.html:64
111      if current_user:  # base.html:64
112          _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n<img style="height: 18px" src="')  # base.html:67
113          _tt_tmp = current_user['avatar']  # base.html:67
114          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:67
115          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:67
116          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:67
117          _tt_append(_tt_tmp)  # base.html:67
118          _tt_append('">\n')  # base.html:68
119          _tt_tmp = current_user['name']  # base.html:68
120          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:68
121          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:68
122          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:68
123          _tt_append(_tt_tmp)  # base.html:68
124          _tt_append(' <b class="caret"></b>\n</a>\n<ul class="dropdown-menu">\n<li><a href="')  # base.html:71
125          _tt_tmp = reverse_url('admin.article.action', 'submit')  # base.html:71
126          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:71
127          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:71
128          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:71
129          _tt_append(_tt_tmp)  # base.html:71
130          _tt_append('">\xe5\x8f\x91\xe8\xa1\xa8\xe5\x8d\x9a\xe6\x96\x87</a></li>\n<li><a href="')  # base.html:72
131          _tt_tmp = reverse_url('admin.account')  # base.html:72
132          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:72
133          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:72
134          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:72
135          _tt_append(_tt_tmp)  # base.html:72
136          _tt_append('">\xe7\xae\xa1\xe7\x90\x86\xe5\x8d\x9a\xe5\xae\xa2</a></li>\n<li><a href="')  # base.html:73
137          _tt_tmp = reverse_url('logout')  # base.html:73
138          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:73
139          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:73
140          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:73
141          _tt_append(_tt_tmp)  # base.html:73
142          _tt_append('">\xe9\x80\x80\xe5\x87\xba\xe7\x99\xbb\xe9\x99\x86</a></li>\n</ul>\n</li>\n')  # base.html:76
143          pass  # base.html:64
144      _tt_append('\n</ul>\n</div>\n</div>\n</nav>\n</header>\n')  # base.html:82
145      _tt_append('\n<div class="content">\n<div class="container">\n<div class="row">\n<div class="col-md-8 article">\n')  # base.html:87 (via base.html:82)
146      if handler.has_message():  # base.html:87 (via base.html:82)
147          _tt_append(' ')  # base.html:87 (via base.html:82)
148          for message in handler.read_messages():  # base.html:87 (via base.html:82)
149              _tt_append('\n<div class="alert alert-')  # base.html:88 (via base.html:82)
150              _tt_tmp = message['category']  # base.html:88 (via base.html:82)
151              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:88 (via base.html:82)
152              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:88 (via base.html:82)
153              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:88 (via base.html:82)
154              _tt_append(_tt_tmp)  # base.html:88 (via base.html:82)
155              _tt_append(' alert-dismissable">\n<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button> ')  # base.html:89 (via base.html:82)
156              _tt_tmp = message['message']  # base.html:89 (via base.html:82)
157              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:89 (via base.html:82)
158              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:89 (via base.html:82)
159              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:89 (via base.html:82)
160              _tt_append(_tt_tmp)  # base.html:89 (via base.html:82)
161              _tt_append('\n</div>\n')  # base.html:92 (via base.html:82)
162              pass  # base.html:87 (via base.html:82)
163          _tt_append(' ')  # base.html:92 (via base.html:82)
164          pass  # base.html:87 (via base.html:82)
165      _tt_append(' ')  # base.html:92 (via base.html:82)
166      _tt_append(' ')  # base.html:92 (via base.html:92, base.html:82)
167      _tt_append('\n</div>\n<div class="col-md-4 blog_nav">\n')  # base.html:95 (via base.html:82)
168      _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
169      for plugin in SiteCollection.plugins:  # base.html:95 (via base.html:95, base.html:82)
170          _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
171          if not plugin.disabled:  # base.html:95 (via base.html:95, base.html:82)
172              _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
173              if plugin.content
174                      != Constants.SYSTEM_PLUGIN:  # base.html:95 (via base.html:95, base.html:82)
175                  _tt_append('\n<div id="')  # base.html:97 (via base.html:95, base.html:82)
176                  _tt_tmp = plugin.title  # base.html:97 (via base.html:95, base.html:82)
177                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
178                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
179                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
180                  _tt_append(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
181                  _tt_append('" class="entry-box">\n<h5><strong>')  # base.html:98 (via base.html:95, base.html:82)
182                  _tt_tmp = plugin.title  # base.html:98 (via base.html:95, base.html:82)
183                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
184                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
185                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
186                  _tt_append(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
187                  _tt_append('</strong></h5>\n')  # base.html:99 (via base.html:95, base.html:82)
188                  _tt_tmp = plugin.content  # base.html:99 (via base.html:95, base.html:82)
189                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
190                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:99 (via base.html:95, base.html:82)
191                  _tt_append(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
192                  _tt_append('\n</div>\n')  # base.html:101 (via base.html:95, base.html:82)
193                  pass  # base.html:101 (via base.html:95, base.html:82)
194              else:  # base.html:101 (via base.html:95, base.html:82)
195                  _tt_append('\n<div class="entry-box">\n<h5><strong>\xe5\x8d\x9a\xe5\xae\xa2\xe7\xbb\x9f\xe8\xae\xa1</strong></h5>\n<p>\n\xe4\xbb\x8a\xe6\x97\xa5PV\xef\xbc\x9a<span class="badge">')  # base.html:105 (via base.html:95, base.html:82)
196                  _tt_tmp = SiteCollection.pv  # base.html:105 (via base.html:95, base.html:82)
197                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
198                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
199                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
200                  _tt_append(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
201                  _tt_append('</span> \xe4\xbb\x8a\xe6\x97\xa5UV\xef\xbc\x9a\n<span class="badge">')  # base.html:106 (via base.html:95, base.html:82)
202                  _tt_tmp = SiteCollection.uv  # base.html:106 (via base.html:95, base.html:82)
203                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
204                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
205                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
206                  _tt_append(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
207                  _tt_append('</span>\n</p>\n<p>\n\xe5\x8d\x9a\xe6\x96\x87\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a<span class="badge">')  # base.html:109 (via base.html:95, base.html:82)
208                  _tt_tmp = SiteCollection.article_count  # base.html:109 (via base.html:95, base.html:82)
209                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
210                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
211                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
212                  _tt_append(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
213                  _tt_append('</span> \xe8\xaf\x84\xe8\xae\xba\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<span class="badge">')  # base.html:110 (via base.html:95, base.html:82)
214                  _tt_tmp = SiteCollection.comment_count  # base.html:110 (via base.html:95, base.html:82)
215                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
216                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
217                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
218                  _tt_append(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
219                  _tt_append('</span> \xe6\x9c\x88\xe5\xba\xa6\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<!-- <span class="badge">')  # base.html:111 (via base.html:95, base.html:82)
220                  _tt_tmp = SiteCollection.article_month_count  # base.html:111 (via base.html:95, base.html:82)
221                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
222                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
223                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
224                  _tt_append(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
225                  _tt_append('</span> -->\n</p>\n<p>\n')  # base.html:114 (via base.html:95, base.html:82)
226                  for source in SiteCollection.article_sources:  # base.html:114 (via base.html:95, base.html:82)
227                      _tt_append('\n<a href="')  # base.html:115 (via base.html:95, base.html:82)
228                      _tt_tmp = reverse_url('articleSource', source.id)  # base.html:115 (via base.html:95, base.html:82)
229                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
230                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
231                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
232                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
233                      _tt_append('">')  # base.html:115 (via base.html:95, base.html:82)
234                      _tt_tmp = source.name  # base.html:115 (via base.html:95, base.html:82)
235                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
236                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
237                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
238                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
239                      _tt_append('</a>\xef\xbc\x9a\n<span class="badge">')  # base.html:116 (via base.html:95, base.html:82)
240                      _tt_tmp = source.articles_count  # base.html:116 (via base.html:95, base.html:82)
241                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
242                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
243                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
244                      _tt_append(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
245                      _tt_append('</span> ')  # base.html:116 (via base.html:95, base.html:82)
246                      pass  # base.html:114 (via base.html:95, base.html:82)
247                  _tt_append('\n</p>\n</div>\n')  # base.html:119 (via base.html:95, base.html:82)
248                  pass  # base.html:95 (via base.html:95, base.html:82)
249              _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
250              pass  # base.html:95 (via base.html:95, base.html:82)
251          _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
252          pass  # base.html:95 (via base.html:95, base.html:82)
253      _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
254      _tt_append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:124 (via base.html:82)
255      _tt_append('\n<div class="footer">\n<p class="footer-content">\n@2018\n<a target="_blank" href="https://github.com/wjkaola123/blog">blog</a> -\xe5\xbc\x80\xe6\xba\x90\xe7\x9a\x84\xe5\x88\x86\xe5\xb8\x83\xe5\xbc\x8f\xe5\x8d\x9a\xe5\xae\xa2\xe7\xb3\xbb\xe7\xbb\x9f ')  # base.html:128
256      if not current_user:  # base.html:128
257          _tt_append(' -\n<a href="')  # base.html:129
258          _tt_tmp = handler.login_url()  # base.html:129
259          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:129
260          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:129
261          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:129
262          _tt_append(_tt_tmp)  # base.html:129
263          _tt_append('">\n<span class="glyphicon glyphicon-wrench">\xe5\x90\x8e\xe5\x8f\xb0\xe7\xae\xa1\xe7\x90\x86</span>\n</a> ')  # base.html:131
264          pass  # base.html:128
265      _tt_append('\n</p>\n</div>\n<div class="btn-group-vertical floatButton">\n<button id="goTop" class="btn btn-default" title="\xe5\x8e\xbb\xe9\xa1\xb6\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-up"></span>\n</button>\n<button id="refresh" class="btn btn-default" title="\xe5\x88\xb7\xe6\x96\xb0" type="button">\n<span class="glyphicon glyphicon-refresh"></span>\n</button>\n<button id="goBottom" class="btn btn-default" title="\xe5\x8e\xbb\xe5\xba\x95\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-down"></span>\n</button>\n</div>\n')  # base.html:145
266      _tt_append('\n<script src="')  # base.html:146 (via base.html:145)
267      _tt_tmp = static_url('js/jquery-2.2.1.min.js')  # base.html:146 (via base.html:145)
268      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:146 (via base.html:145)
269      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:146 (via base.html:145)
270      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:146 (via base.html:145)
271      _tt_append(_tt_tmp)  # base.html:146 (via base.html:145)
272      _tt_append('"></script>\n<script src="')  # base.html:147 (via base.html:145)
273      _tt_tmp = static_url('js/bootstrap.min.js')  # base.html:147 (via base.html:145)
274      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:147 (via base.html:145)
275      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:147 (via base.html:145)
276      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:147 (via base.html:145)
277      _tt_append(_tt_tmp)  # base.html:147 (via base.html:145)
278      _tt_append('"></script>\n<script src="//cdn.bootcss.com/bootstrap-hover-dropdown/2.2.1/bootstrap-hover-dropdown.min.js"></script>\n<script src="')  # base.html:149 (via base.html:145)
279      _tt_tmp = static_url('js/floatButton.js')  # base.html:149 (via base.html:145)
280      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:149 (via base.html:145)
281      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:149 (via base.html:145)
282      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:149 (via base.html:145)
283      _tt_append(_tt_tmp)  # base.html:149 (via base.html:145)
284      _tt_append('"></script>\n')  # base.html:150 (via base.html:145)
285      _tt_append(' ')  # base.html:150
286      _tt_append(' ')  # base.html:150 (via base.html:150)
287      _tt_append('\n</body>\n</html>')  # base.html:153
288      return _tt_utf8('').join(_tt_buffer)  # base.html:0
2018-05-19 19:20:57,266 - tornado.application - web.py[line:1548] - ERROR - Uncaught exception GET / (::1)
HTTPServerRequest(protocol='http', host='localhost:8888', method='GET', uri='/', version='HTTP/1.1', remote_ip='::1', headers={'Accept-Language': 'zh-CN,zh;q=0.9', 'Accept-Encoding': 'gzip, deflate, br', 'Host': 'localhost:8888', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36', 'Connection': 'keep-alive', 'Cookie': 'uv_tag="2|1:0|10:1526707156|6:uv_tag|4:MTk=|d6b01a3c2fb07ad1d6932307f28288b31ef62f346eb3a47b020fa17eb84b46b3"', 'Cache-Control': 'max-age=0', 'Upgrade-Insecure-Requests': '1'})
Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\tornado\web.py", line 1469, in _execute
    result = yield result
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1024, in run
    yielded = self.gen.send(value)
  File "e:\httpdocs\blog\controller\home.py", line 26, in get
    pager=pager, article_search_params=article_search_params)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 719, in render
    html = self.render_string(template_name, **kwargs)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 823, in render_string
    t = loader.load(template_name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 307, in __init__
    self.code = self._generate_python(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 355, in _generate_python
    ancestors = self._get_ancestors(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 373, in _get_ancestors
    template = loader.load(chunk.name, self.name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 317, in __init__
    "exec", dont_inherit=True)
  File "base_html.generated.py", line 173
    if plugin.content
                    ^
SyntaxError: invalid syntax
2018-05-19 19:20:57,283 - tornado.access - web.py[line:1971] - ERROR - 500 GET / (::1) 75.00ms
2018-05-19 19:22:49,892 - tornado.application - template.py[line:320] - ERROR - base.html code:
  1  def _tt_execute():  # base.html:0
  2      _tt_buffer = []  # base.html:0
  3      _tt_append = _tt_buffer.append  # base.html:0
  4      _tt_append('<!DOCTYPE html> ')  # base.html:1
  5      from model.site_info import SiteCollection  # base.html:1
  6      _tt_append(' ')  # base.html:1
  7      from model.constants import Constants  # base.html:1
  8      _tt_append('\n<html>\n<head>\n<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta charset="UTF-8">\n<title>\n')  # base.html:8
  9      _tt_append(' ')  # base.html:8 (via base.html:8)
 10      _tt_tmp = SiteCollection.title  # base.html:8 (via base.html:8)
 11      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:8 (via base.html:8)
 12      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:8 (via base.html:8)
 13      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:8 (via base.html:8)
 14      _tt_append(_tt_tmp)  # base.html:8 (via base.html:8)
 15      _tt_append(' ')  # base.html:8 (via base.html:8)
 16      _tt_append('\n</title>\n')  # base.html:10
 17      _tt_append('\n<link href="')  # base.html:11 (via base.html:10)
 18      _tt_tmp = static_url('css/bootstrap.css')  # base.html:11 (via base.html:10)
 19      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:11 (via base.html:10)
 20      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:11 (via base.html:10)
 21      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:11 (via base.html:10)
 22      _tt_append(_tt_tmp)  # base.html:11 (via base.html:10)
 23      _tt_append('" rel="stylesheet">\n<link href="')  # base.html:12 (via base.html:10)
 24      _tt_tmp = static_url('css/common.css')  # base.html:12 (via base.html:10)
 25      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:12 (via base.html:10)
 26      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:12 (via base.html:10)
 27      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:12 (via base.html:10)
 28      _tt_append(_tt_tmp)  # base.html:12 (via base.html:10)
 29      _tt_append('" rel="stylesheet"> ')  # base.html:12 (via base.html:10)
 30      _tt_append(' ')  # base.html:12 (via base.html:12, base.html:10)
 31      _tt_append(' ')  # base.html:12 (via base.html:10)
 32      _tt_append('\n</head>\n<body>\n<header>\n<div class=\'header-top\'>\n<div class="container">\n<h2 class="blog-title"><a href="')  # base.html:19
 33      _tt_tmp = reverse_url('index')  # base.html:19
 34      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 35      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 36      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 37      _tt_append(_tt_tmp)  # base.html:19
 38      _tt_append('">')  # base.html:19
 39      _tt_tmp = SiteCollection.title  # base.html:19
 40      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 41      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 42      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 43      _tt_append(_tt_tmp)  # base.html:19
 44      _tt_append('</a></h2>\n<p class="lead signature">\n')  # base.html:21
 45      _tt_tmp = SiteCollection.signature  # base.html:21
 46      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:21
 47      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:21
 48      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:21
 49      _tt_append(_tt_tmp)  # base.html:21
 50      _tt_append('\n</p>\n</div>\n</div>\n<nav class="navbar navbar-')  # base.html:25
 51      _tt_tmp = SiteCollection.navbar  # base.html:25
 52      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:25
 53      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:25
 54      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:25
 55      _tt_append(_tt_tmp)  # base.html:25
 56      _tt_append('" role="navigation">\n<div class="container">\n<div class="navbar-header">\n<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">\n<span class="sr-only">\xe5\x88\x87\xe6\x8d\xa2\xe5\xaf\xbc\xe8\x88\xaa</span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</button>\n</div>\n<div class="collapse navbar-collapse">\n<ul class="nav navbar-nav">\n<li class=""><a href="/"><span class="glyphicon glyphicon-home"> \xe9\xa6\x96\xe9\xa1\xb5</span></a></li>\n')  # base.html:38
 57      for menu in SiteCollection.menus:  # base.html:38
 58          _tt_append(' ')  # base.html:38
 59          if menu.all_types:  # base.html:38
 60              _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n')  # base.html:41
 61              _tt_tmp = menu.name  # base.html:41
 62              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:41
 63              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:41
 64              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:41
 65              _tt_append(_tt_tmp)  # base.html:41
 66              _tt_append('\n<b class="caret"></b></a>\n<ul class="dropdown-menu">\n')  # base.html:44
 67              for article_type in menu.all_types:  # base.html:44
 68                  _tt_append(' ')  # base.html:44
 69                  if not article_type.is_hide:  # base.html:44
 70                      _tt_append('\n<li>\n<a href="')  # base.html:46
 71                      _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:46
 72                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:46
 73                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:46
 74                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:46
 75                      _tt_append(_tt_tmp)  # base.html:46
 76                      _tt_append('">\n')  # base.html:47
 77                      _tt_tmp = article_type.name  # base.html:47
 78                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:47
 79                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:47
 80                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:47
 81                      _tt_append(_tt_tmp)  # base.html:47
 82                      _tt_append('\n</a>\n</li>\n<li class="divider"></li>\n')  # base.html:51
 83                      pass  # base.html:44
 84                  _tt_append(' ')  # base.html:51
 85                  pass  # base.html:44
 86              _tt_append('\n</ul>\n</li>\n')  # base.html:54
 87              pass  # base.html:38
 88          _tt_append(' ')  # base.html:54
 89          pass  # base.html:38
 90      _tt_append(' ')  # base.html:54
 91      for article_type in SiteCollection.article_types_not_under_menu:  # base.html:54
 92          _tt_append(' ')  # base.html:54
 93          if not article_type.is_hide:  # base.html:54
 94              _tt_append('\n<li>\n<a href="')  # base.html:57
 95              _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:57
 96              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:57
 97              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:57
 98              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:57
 99              _tt_append(_tt_tmp)  # base.html:57
100              _tt_append('">\n')  # base.html:58
101              _tt_tmp = article_type.name  # base.html:58
102              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:58
103              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:58
104              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:58
105              _tt_append(_tt_tmp)  # base.html:58
106              _tt_append('\n</a>\n</li>\n')  # base.html:61
107              pass  # base.html:54
108          _tt_append(' ')  # base.html:61
109          pass  # base.html:54
110      _tt_append('\n</ul>\n<ul class="nav navbar-nav navbar-right">\n')  # base.html:64
111      if current_user:  # base.html:64
112          _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n<img style="height: 18px" src="')  # base.html:67
113          _tt_tmp = current_user['avatar']  # base.html:67
114          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:67
115          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:67
116          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:67
117          _tt_append(_tt_tmp)  # base.html:67
118          _tt_append('">\n')  # base.html:68
119          _tt_tmp = current_user['name']  # base.html:68
120          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:68
121          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:68
122          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:68
123          _tt_append(_tt_tmp)  # base.html:68
124          _tt_append(' <b class="caret"></b>\n</a>\n<ul class="dropdown-menu">\n<li><a href="')  # base.html:71
125          _tt_tmp = reverse_url('admin.article.action', 'submit')  # base.html:71
126          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:71
127          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:71
128          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:71
129          _tt_append(_tt_tmp)  # base.html:71
130          _tt_append('">\xe5\x8f\x91\xe8\xa1\xa8\xe5\x8d\x9a\xe6\x96\x87</a></li>\n<li><a href="')  # base.html:72
131          _tt_tmp = reverse_url('admin.account')  # base.html:72
132          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:72
133          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:72
134          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:72
135          _tt_append(_tt_tmp)  # base.html:72
136          _tt_append('">\xe7\xae\xa1\xe7\x90\x86\xe5\x8d\x9a\xe5\xae\xa2</a></li>\n<li><a href="')  # base.html:73
137          _tt_tmp = reverse_url('logout')  # base.html:73
138          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:73
139          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:73
140          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:73
141          _tt_append(_tt_tmp)  # base.html:73
142          _tt_append('">\xe9\x80\x80\xe5\x87\xba\xe7\x99\xbb\xe9\x99\x86</a></li>\n</ul>\n</li>\n')  # base.html:76
143          pass  # base.html:64
144      _tt_append('\n</ul>\n</div>\n</div>\n</nav>\n</header>\n')  # base.html:82
145      _tt_append('\n<div class="content">\n<div class="container">\n<div class="row">\n<div class="col-md-8 article">\n')  # base.html:87 (via base.html:82)
146      if handler.has_message():  # base.html:87 (via base.html:82)
147          _tt_append(' ')  # base.html:87 (via base.html:82)
148          for message in handler.read_messages():  # base.html:87 (via base.html:82)
149              _tt_append('\n<div class="alert alert-')  # base.html:88 (via base.html:82)
150              _tt_tmp = message['category']  # base.html:88 (via base.html:82)
151              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:88 (via base.html:82)
152              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:88 (via base.html:82)
153              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:88 (via base.html:82)
154              _tt_append(_tt_tmp)  # base.html:88 (via base.html:82)
155              _tt_append(' alert-dismissable">\n<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button> ')  # base.html:89 (via base.html:82)
156              _tt_tmp = message['message']  # base.html:89 (via base.html:82)
157              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:89 (via base.html:82)
158              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:89 (via base.html:82)
159              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:89 (via base.html:82)
160              _tt_append(_tt_tmp)  # base.html:89 (via base.html:82)
161              _tt_append('\n</div>\n')  # base.html:92 (via base.html:82)
162              pass  # base.html:87 (via base.html:82)
163          _tt_append(' ')  # base.html:92 (via base.html:82)
164          pass  # base.html:87 (via base.html:82)
165      _tt_append(' ')  # base.html:92 (via base.html:82)
166      _tt_append(' ')  # base.html:92 (via base.html:92, base.html:82)
167      _tt_append('\n</div>\n<div class="col-md-4 blog_nav">\n')  # base.html:95 (via base.html:82)
168      _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
169      for plugin in SiteCollection.plugins:  # base.html:95 (via base.html:95, base.html:82)
170          _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
171          if not plugin.disabled:  # base.html:95 (via base.html:95, base.html:82)
172              _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
173              if plugin.content
174                      != Constants.SYSTEM_PLUGIN:  # base.html:95 (via base.html:95, base.html:82)
175                  _tt_append('\n<div id="')  # base.html:97 (via base.html:95, base.html:82)
176                  _tt_tmp = plugin.title  # base.html:97 (via base.html:95, base.html:82)
177                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
178                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
179                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
180                  _tt_append(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
181                  _tt_append('" class="entry-box">\n<h5><strong>')  # base.html:98 (via base.html:95, base.html:82)
182                  _tt_tmp = plugin.title  # base.html:98 (via base.html:95, base.html:82)
183                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
184                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
185                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
186                  _tt_append(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
187                  _tt_append('</strong></h5>\n')  # base.html:99 (via base.html:95, base.html:82)
188                  _tt_tmp = plugin.content  # base.html:99 (via base.html:95, base.html:82)
189                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
190                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:99 (via base.html:95, base.html:82)
191                  _tt_append(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
192                  _tt_append('\n</div>\n')  # base.html:101 (via base.html:95, base.html:82)
193                  pass  # base.html:101 (via base.html:95, base.html:82)
194              else:  # base.html:101 (via base.html:95, base.html:82)
195                  _tt_append('\n<div class="entry-box">\n<h5><strong>\xe5\x8d\x9a\xe5\xae\xa2\xe7\xbb\x9f\xe8\xae\xa1</strong></h5>\n<p>\n\xe4\xbb\x8a\xe6\x97\xa5PV\xef\xbc\x9a<span class="badge">')  # base.html:105 (via base.html:95, base.html:82)
196                  _tt_tmp = SiteCollection.pv  # base.html:105 (via base.html:95, base.html:82)
197                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
198                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
199                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
200                  _tt_append(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
201                  _tt_append('</span> \xe4\xbb\x8a\xe6\x97\xa5UV\xef\xbc\x9a\n<span class="badge">')  # base.html:106 (via base.html:95, base.html:82)
202                  _tt_tmp = SiteCollection.uv  # base.html:106 (via base.html:95, base.html:82)
203                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
204                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
205                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
206                  _tt_append(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
207                  _tt_append('</span>\n</p>\n<p>\n\xe5\x8d\x9a\xe6\x96\x87\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a<span class="badge">')  # base.html:109 (via base.html:95, base.html:82)
208                  _tt_tmp = SiteCollection.article_count  # base.html:109 (via base.html:95, base.html:82)
209                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
210                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
211                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
212                  _tt_append(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
213                  _tt_append('</span> \xe8\xaf\x84\xe8\xae\xba\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<span class="badge">')  # base.html:110 (via base.html:95, base.html:82)
214                  _tt_tmp = SiteCollection.comment_count  # base.html:110 (via base.html:95, base.html:82)
215                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
216                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
217                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
218                  _tt_append(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
219                  _tt_append('</span> \xe6\x9c\x88\xe5\xba\xa6\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<!-- <span class="badge">')  # base.html:111 (via base.html:95, base.html:82)
220                  _tt_tmp = SiteCollection.article_month_count  # base.html:111 (via base.html:95, base.html:82)
221                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
222                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
223                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
224                  _tt_append(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
225                  _tt_append('</span> -->\n</p>\n<p>\n')  # base.html:114 (via base.html:95, base.html:82)
226                  for source in SiteCollection.article_sources:  # base.html:114 (via base.html:95, base.html:82)
227                      _tt_append('\n<a href="')  # base.html:115 (via base.html:95, base.html:82)
228                      _tt_tmp = reverse_url('articleSource', source.id)  # base.html:115 (via base.html:95, base.html:82)
229                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
230                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
231                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
232                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
233                      _tt_append('">')  # base.html:115 (via base.html:95, base.html:82)
234                      _tt_tmp = source.name  # base.html:115 (via base.html:95, base.html:82)
235                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
236                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
237                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
238                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
239                      _tt_append('</a>\xef\xbc\x9a\n<span class="badge">')  # base.html:116 (via base.html:95, base.html:82)
240                      _tt_tmp = source.articles_count  # base.html:116 (via base.html:95, base.html:82)
241                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
242                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
243                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
244                      _tt_append(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
245                      _tt_append('</span> ')  # base.html:116 (via base.html:95, base.html:82)
246                      pass  # base.html:114 (via base.html:95, base.html:82)
247                  _tt_append('\n</p>\n</div>\n')  # base.html:119 (via base.html:95, base.html:82)
248                  pass  # base.html:95 (via base.html:95, base.html:82)
249              _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
250              pass  # base.html:95 (via base.html:95, base.html:82)
251          _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
252          pass  # base.html:95 (via base.html:95, base.html:82)
253      _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
254      _tt_append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:124 (via base.html:82)
255      _tt_append('\n<div class="footer">\n<p class="footer-content">\n@2018\n<a target="_blank" href="https://github.com/wjkaola123/blog">blog</a> -\xe5\xbc\x80\xe6\xba\x90\xe7\x9a\x84\xe5\x88\x86\xe5\xb8\x83\xe5\xbc\x8f\xe5\x8d\x9a\xe5\xae\xa2\xe7\xb3\xbb\xe7\xbb\x9f ')  # base.html:128
256      if not current_user:  # base.html:128
257          _tt_append(' -\n<a href="')  # base.html:129
258          _tt_tmp = handler.login_url()  # base.html:129
259          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:129
260          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:129
261          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:129
262          _tt_append(_tt_tmp)  # base.html:129
263          _tt_append('">\n<span class="glyphicon glyphicon-wrench">\xe5\x90\x8e\xe5\x8f\xb0\xe7\xae\xa1\xe7\x90\x86</span>\n</a> ')  # base.html:131
264          pass  # base.html:128
265      _tt_append('\n</p>\n</div>\n<div class="btn-group-vertical floatButton">\n<button id="goTop" class="btn btn-default" title="\xe5\x8e\xbb\xe9\xa1\xb6\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-up"></span>\n</button>\n<button id="refresh" class="btn btn-default" title="\xe5\x88\xb7\xe6\x96\xb0" type="button">\n<span class="glyphicon glyphicon-refresh"></span>\n</button>\n<button id="goBottom" class="btn btn-default" title="\xe5\x8e\xbb\xe5\xba\x95\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-down"></span>\n</button>\n</div>\n')  # base.html:145
266      _tt_append('\n<script src="')  # base.html:146 (via base.html:145)
267      _tt_tmp = static_url('js/jquery-2.2.1.min.js')  # base.html:146 (via base.html:145)
268      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:146 (via base.html:145)
269      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:146 (via base.html:145)
270      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:146 (via base.html:145)
271      _tt_append(_tt_tmp)  # base.html:146 (via base.html:145)
272      _tt_append('"></script>\n<script src="')  # base.html:147 (via base.html:145)
273      _tt_tmp = static_url('js/bootstrap.min.js')  # base.html:147 (via base.html:145)
274      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:147 (via base.html:145)
275      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:147 (via base.html:145)
276      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:147 (via base.html:145)
277      _tt_append(_tt_tmp)  # base.html:147 (via base.html:145)
278      _tt_append('"></script>\n<script src="//cdn.bootcss.com/bootstrap-hover-dropdown/2.2.1/bootstrap-hover-dropdown.min.js"></script>\n<script src="')  # base.html:149 (via base.html:145)
279      _tt_tmp = static_url('js/floatButton.js')  # base.html:149 (via base.html:145)
280      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:149 (via base.html:145)
281      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:149 (via base.html:145)
282      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:149 (via base.html:145)
283      _tt_append(_tt_tmp)  # base.html:149 (via base.html:145)
284      _tt_append('"></script>\n')  # base.html:150 (via base.html:145)
285      _tt_append(' ')  # base.html:150
286      _tt_append(' ')  # base.html:150 (via base.html:150)
287      _tt_append('\n</body>\n</html>')  # base.html:153
288      return _tt_utf8('').join(_tt_buffer)  # base.html:0
2018-05-19 19:22:49,901 - tornado.application - web.py[line:1548] - ERROR - Uncaught exception GET / (::1)
HTTPServerRequest(protocol='http', host='localhost:8888', method='GET', uri='/', version='HTTP/1.1', remote_ip='::1', headers={'Accept-Language': 'zh-CN,zh;q=0.9', 'Accept-Encoding': 'gzip, deflate, br', 'Host': 'localhost:8888', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36', 'Connection': 'keep-alive', 'Cookie': 'uv_tag="2|1:0|10:1526707156|6:uv_tag|4:MTk=|d6b01a3c2fb07ad1d6932307f28288b31ef62f346eb3a47b020fa17eb84b46b3"', 'Cache-Control': 'max-age=0', 'Upgrade-Insecure-Requests': '1'})
Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\tornado\web.py", line 1469, in _execute
    result = yield result
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1024, in run
    yielded = self.gen.send(value)
  File "e:\httpdocs\blog\controller\home.py", line 27, in get
    pager=pager, article_search_params=article_search_params)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 719, in render
    html = self.render_string(template_name, **kwargs)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 823, in render_string
    t = loader.load(template_name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 307, in __init__
    self.code = self._generate_python(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 355, in _generate_python
    ancestors = self._get_ancestors(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 373, in _get_ancestors
    template = loader.load(chunk.name, self.name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 317, in __init__
    "exec", dont_inherit=True)
  File "base_html.generated.py", line 173
    if plugin.content
                    ^
SyntaxError: invalid syntax
2018-05-19 19:22:49,930 - tornado.access - web.py[line:1971] - ERROR - 500 GET / (::1) 228.00ms
2018-05-19 19:31:22,334 - tornado.application - template.py[line:320] - ERROR - base.html code:
  1  def _tt_execute():  # base.html:0
  2      _tt_buffer = []  # base.html:0
  3      _tt_append = _tt_buffer.append  # base.html:0
  4      _tt_append('<!DOCTYPE html> ')  # base.html:1
  5      from model.site_info import SiteCollection  # base.html:1
  6      _tt_append(' ')  # base.html:1
  7      from model.constants import Constants  # base.html:1
  8      _tt_append('\n<html>\n<head>\n<meta name="viewport" content="width=device-width, initial-scale=1.0">\n<meta charset="UTF-8">\n<title>\n')  # base.html:8
  9      _tt_append(' ')  # base.html:8 (via base.html:8)
 10      _tt_tmp = SiteCollection.title  # base.html:8 (via base.html:8)
 11      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:8 (via base.html:8)
 12      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:8 (via base.html:8)
 13      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:8 (via base.html:8)
 14      _tt_append(_tt_tmp)  # base.html:8 (via base.html:8)
 15      _tt_append(' ')  # base.html:8 (via base.html:8)
 16      _tt_append('\n</title>\n')  # base.html:10
 17      _tt_append('\n<link href="')  # base.html:11 (via base.html:10)
 18      _tt_tmp = static_url('css/bootstrap.css')  # base.html:11 (via base.html:10)
 19      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:11 (via base.html:10)
 20      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:11 (via base.html:10)
 21      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:11 (via base.html:10)
 22      _tt_append(_tt_tmp)  # base.html:11 (via base.html:10)
 23      _tt_append('" rel="stylesheet">\n<link href="')  # base.html:12 (via base.html:10)
 24      _tt_tmp = static_url('css/common.css')  # base.html:12 (via base.html:10)
 25      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:12 (via base.html:10)
 26      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:12 (via base.html:10)
 27      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:12 (via base.html:10)
 28      _tt_append(_tt_tmp)  # base.html:12 (via base.html:10)
 29      _tt_append('" rel="stylesheet"> ')  # base.html:12 (via base.html:10)
 30      _tt_append(' ')  # base.html:12 (via base.html:12, base.html:10)
 31      _tt_append(' ')  # base.html:12 (via base.html:10)
 32      _tt_append('\n</head>\n<body>\n<header>\n<div class=\'header-top\'>\n<div class="container">\n<h2 class="blog-title"><a href="')  # base.html:19
 33      _tt_tmp = reverse_url('index')  # base.html:19
 34      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 35      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 36      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 37      _tt_append(_tt_tmp)  # base.html:19
 38      _tt_append('">')  # base.html:19
 39      _tt_tmp = SiteCollection.title  # base.html:19
 40      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:19
 41      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:19
 42      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:19
 43      _tt_append(_tt_tmp)  # base.html:19
 44      _tt_append('</a></h2>\n<p class="lead signature">\n')  # base.html:21
 45      _tt_tmp = SiteCollection.signature  # base.html:21
 46      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:21
 47      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:21
 48      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:21
 49      _tt_append(_tt_tmp)  # base.html:21
 50      _tt_append('\n</p>\n</div>\n</div>\n<nav class="navbar navbar-')  # base.html:25
 51      _tt_tmp = SiteCollection.navbar  # base.html:25
 52      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:25
 53      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:25
 54      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:25
 55      _tt_append(_tt_tmp)  # base.html:25
 56      _tt_append('" role="navigation">\n<div class="container">\n<div class="navbar-header">\n<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">\n<span class="sr-only">\xe5\x88\x87\xe6\x8d\xa2\xe5\xaf\xbc\xe8\x88\xaa</span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</button>\n</div>\n<div class="collapse navbar-collapse">\n<ul class="nav navbar-nav">\n<li class=""><a href="/"><span class="glyphicon glyphicon-home"> \xe9\xa6\x96\xe9\xa1\xb5</span></a></li>\n')  # base.html:38
 57      for menu in SiteCollection.menus:  # base.html:38
 58          _tt_append(' ')  # base.html:38
 59          if menu.all_types:  # base.html:38
 60              _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n')  # base.html:41
 61              _tt_tmp = menu.name  # base.html:41
 62              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:41
 63              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:41
 64              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:41
 65              _tt_append(_tt_tmp)  # base.html:41
 66              _tt_append('\n<b class="caret"></b></a>\n<ul class="dropdown-menu">\n')  # base.html:44
 67              for article_type in menu.all_types:  # base.html:44
 68                  _tt_append(' ')  # base.html:44
 69                  if not article_type.is_hide:  # base.html:44
 70                      _tt_append('\n<li>\n<a href="')  # base.html:46
 71                      _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:46
 72                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:46
 73                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:46
 74                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:46
 75                      _tt_append(_tt_tmp)  # base.html:46
 76                      _tt_append('">\n')  # base.html:47
 77                      _tt_tmp = article_type.name  # base.html:47
 78                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:47
 79                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:47
 80                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:47
 81                      _tt_append(_tt_tmp)  # base.html:47
 82                      _tt_append('\n</a>\n</li>\n<li class="divider"></li>\n')  # base.html:51
 83                      pass  # base.html:44
 84                  _tt_append(' ')  # base.html:51
 85                  pass  # base.html:44
 86              _tt_append('\n</ul>\n</li>\n')  # base.html:54
 87              pass  # base.html:38
 88          _tt_append(' ')  # base.html:54
 89          pass  # base.html:38
 90      _tt_append(' ')  # base.html:54
 91      for article_type in SiteCollection.article_types_not_under_menu:  # base.html:54
 92          _tt_append(' ')  # base.html:54
 93          if not article_type.is_hide:  # base.html:54
 94              _tt_append('\n<li>\n<a href="')  # base.html:57
 95              _tt_tmp = reverse_url('articleType', article_type.id)  # base.html:57
 96              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:57
 97              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:57
 98              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:57
 99              _tt_append(_tt_tmp)  # base.html:57
100              _tt_append('">\n')  # base.html:58
101              _tt_tmp = article_type.name  # base.html:58
102              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:58
103              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:58
104              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:58
105              _tt_append(_tt_tmp)  # base.html:58
106              _tt_append('\n</a>\n</li>\n')  # base.html:61
107              pass  # base.html:54
108          _tt_append(' ')  # base.html:61
109          pass  # base.html:54
110      _tt_append('\n</ul>\n<ul class="nav navbar-nav navbar-right">\n')  # base.html:64
111      if current_user:  # base.html:64
112          _tt_append('\n<li class="dropdown">\n<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">\n<img style="height: 18px" src="')  # base.html:67
113          _tt_tmp = current_user['avatar']  # base.html:67
114          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:67
115          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:67
116          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:67
117          _tt_append(_tt_tmp)  # base.html:67
118          _tt_append('">\n')  # base.html:68
119          _tt_tmp = current_user['name']  # base.html:68
120          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:68
121          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:68
122          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:68
123          _tt_append(_tt_tmp)  # base.html:68
124          _tt_append(' <b class="caret"></b>\n</a>\n<ul class="dropdown-menu">\n<li><a href="')  # base.html:71
125          _tt_tmp = reverse_url('admin.article.action', 'submit')  # base.html:71
126          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:71
127          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:71
128          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:71
129          _tt_append(_tt_tmp)  # base.html:71
130          _tt_append('">\xe5\x8f\x91\xe8\xa1\xa8\xe5\x8d\x9a\xe6\x96\x87</a></li>\n<li><a href="')  # base.html:72
131          _tt_tmp = reverse_url('admin.account')  # base.html:72
132          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:72
133          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:72
134          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:72
135          _tt_append(_tt_tmp)  # base.html:72
136          _tt_append('">\xe7\xae\xa1\xe7\x90\x86\xe5\x8d\x9a\xe5\xae\xa2</a></li>\n<li><a href="')  # base.html:73
137          _tt_tmp = reverse_url('logout')  # base.html:73
138          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:73
139          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:73
140          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:73
141          _tt_append(_tt_tmp)  # base.html:73
142          _tt_append('">\xe9\x80\x80\xe5\x87\xba\xe7\x99\xbb\xe9\x99\x86</a></li>\n</ul>\n</li>\n')  # base.html:76
143          pass  # base.html:64
144      _tt_append('\n</ul>\n</div>\n</div>\n</nav>\n</header>\n')  # base.html:82
145      _tt_append('\n<div class="content">\n<div class="container">\n<div class="row">\n<div class="col-md-8 article">\n')  # base.html:87 (via base.html:82)
146      if handler.has_message():  # base.html:87 (via base.html:82)
147          _tt_append(' ')  # base.html:87 (via base.html:82)
148          for message in handler.read_messages():  # base.html:87 (via base.html:82)
149              _tt_append('\n<div class="alert alert-')  # base.html:88 (via base.html:82)
150              _tt_tmp = message['category']  # base.html:88 (via base.html:82)
151              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:88 (via base.html:82)
152              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:88 (via base.html:82)
153              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:88 (via base.html:82)
154              _tt_append(_tt_tmp)  # base.html:88 (via base.html:82)
155              _tt_append(' alert-dismissable">\n<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button> ')  # base.html:89 (via base.html:82)
156              _tt_tmp = message['message']  # base.html:89 (via base.html:82)
157              if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:89 (via base.html:82)
158              else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:89 (via base.html:82)
159              _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:89 (via base.html:82)
160              _tt_append(_tt_tmp)  # base.html:89 (via base.html:82)
161              _tt_append('\n</div>\n')  # base.html:92 (via base.html:82)
162              pass  # base.html:87 (via base.html:82)
163          _tt_append(' ')  # base.html:92 (via base.html:82)
164          pass  # base.html:87 (via base.html:82)
165      _tt_append(' ')  # base.html:92 (via base.html:82)
166      _tt_append(' ')  # base.html:92 (via base.html:92, base.html:82)
167      _tt_append('\n</div>\n<div class="col-md-4 blog_nav">\n')  # base.html:95 (via base.html:82)
168      _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
169      for plugin in SiteCollection.plugins:  # base.html:95 (via base.html:95, base.html:82)
170          _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
171          if not plugin.disabled:  # base.html:95 (via base.html:95, base.html:82)
172              _tt_append(' ')  # base.html:95 (via base.html:95, base.html:82)
173              if plugin.content
174                      != Constants.SYSTEM_PLUGIN:  # base.html:95 (via base.html:95, base.html:82)
175                  _tt_append('\n<div id="')  # base.html:97 (via base.html:95, base.html:82)
176                  _tt_tmp = plugin.title  # base.html:97 (via base.html:95, base.html:82)
177                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
178                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
179                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:97 (via base.html:95, base.html:82)
180                  _tt_append(_tt_tmp)  # base.html:97 (via base.html:95, base.html:82)
181                  _tt_append('" class="entry-box">\n<h5><strong>')  # base.html:98 (via base.html:95, base.html:82)
182                  _tt_tmp = plugin.title  # base.html:98 (via base.html:95, base.html:82)
183                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
184                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
185                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:98 (via base.html:95, base.html:82)
186                  _tt_append(_tt_tmp)  # base.html:98 (via base.html:95, base.html:82)
187                  _tt_append('</strong></h5>\n')  # base.html:99 (via base.html:95, base.html:82)
188                  _tt_tmp = plugin.content  # base.html:99 (via base.html:95, base.html:82)
189                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
190                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:99 (via base.html:95, base.html:82)
191                  _tt_append(_tt_tmp)  # base.html:99 (via base.html:95, base.html:82)
192                  _tt_append('\n</div>\n')  # base.html:101 (via base.html:95, base.html:82)
193                  pass  # base.html:101 (via base.html:95, base.html:82)
194              else:  # base.html:101 (via base.html:95, base.html:82)
195                  _tt_append('\n<div class="entry-box">\n<h5><strong>\xe5\x8d\x9a\xe5\xae\xa2\xe7\xbb\x9f\xe8\xae\xa1</strong></h5>\n<p>\n\xe4\xbb\x8a\xe6\x97\xa5PV\xef\xbc\x9a<span class="badge">')  # base.html:105 (via base.html:95, base.html:82)
196                  _tt_tmp = SiteCollection.pv  # base.html:105 (via base.html:95, base.html:82)
197                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
198                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
199                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:105 (via base.html:95, base.html:82)
200                  _tt_append(_tt_tmp)  # base.html:105 (via base.html:95, base.html:82)
201                  _tt_append('</span> \xe4\xbb\x8a\xe6\x97\xa5UV\xef\xbc\x9a\n<span class="badge">')  # base.html:106 (via base.html:95, base.html:82)
202                  _tt_tmp = SiteCollection.uv  # base.html:106 (via base.html:95, base.html:82)
203                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
204                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
205                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:106 (via base.html:95, base.html:82)
206                  _tt_append(_tt_tmp)  # base.html:106 (via base.html:95, base.html:82)
207                  _tt_append('</span>\n</p>\n<p>\n\xe5\x8d\x9a\xe6\x96\x87\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a<span class="badge">')  # base.html:109 (via base.html:95, base.html:82)
208                  _tt_tmp = SiteCollection.article_count  # base.html:109 (via base.html:95, base.html:82)
209                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
210                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
211                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:109 (via base.html:95, base.html:82)
212                  _tt_append(_tt_tmp)  # base.html:109 (via base.html:95, base.html:82)
213                  _tt_append('</span> \xe8\xaf\x84\xe8\xae\xba\xe6\x80\xbb\xe6\x95\xb0\xef\xbc\x9a\n<span class="badge">')  # base.html:110 (via base.html:95, base.html:82)
214                  _tt_tmp = SiteCollection.comment_count  # base.html:110 (via base.html:95, base.html:82)
215                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
216                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
217                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:110 (via base.html:95, base.html:82)
218                  _tt_append(_tt_tmp)  # base.html:110 (via base.html:95, base.html:82)
219                  _tt_append('</span>\n<span class="badge">')  # base.html:111 (via base.html:95, base.html:82)
220                  _tt_tmp = SiteCollection.article_month_count  # base.html:111 (via base.html:95, base.html:82)
221                  if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
222                  else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
223                  _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:111 (via base.html:95, base.html:82)
224                  _tt_append(_tt_tmp)  # base.html:111 (via base.html:95, base.html:82)
225                  _tt_append('</span>\n</p>\n<p>\n')  # base.html:114 (via base.html:95, base.html:82)
226                  for source in SiteCollection.article_sources:  # base.html:114 (via base.html:95, base.html:82)
227                      _tt_append('\n<a href="')  # base.html:115 (via base.html:95, base.html:82)
228                      _tt_tmp = reverse_url('articleSource', source.id)  # base.html:115 (via base.html:95, base.html:82)
229                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
230                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
231                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
232                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
233                      _tt_append('">')  # base.html:115 (via base.html:95, base.html:82)
234                      _tt_tmp = source.name  # base.html:115 (via base.html:95, base.html:82)
235                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
236                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
237                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:115 (via base.html:95, base.html:82)
238                      _tt_append(_tt_tmp)  # base.html:115 (via base.html:95, base.html:82)
239                      _tt_append('</a>\xef\xbc\x9a\n<span class="badge">')  # base.html:116 (via base.html:95, base.html:82)
240                      _tt_tmp = source.articles_count  # base.html:116 (via base.html:95, base.html:82)
241                      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
242                      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
243                      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:116 (via base.html:95, base.html:82)
244                      _tt_append(_tt_tmp)  # base.html:116 (via base.html:95, base.html:82)
245                      _tt_append('</span> ')  # base.html:116 (via base.html:95, base.html:82)
246                      pass  # base.html:114 (via base.html:95, base.html:82)
247                  _tt_append('\n</p>\n</div>\n')  # base.html:119 (via base.html:95, base.html:82)
248                  pass  # base.html:95 (via base.html:95, base.html:82)
249              _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
250              pass  # base.html:95 (via base.html:95, base.html:82)
251          _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
252          pass  # base.html:95 (via base.html:95, base.html:82)
253      _tt_append(' ')  # base.html:119 (via base.html:95, base.html:82)
254      _tt_append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:124 (via base.html:82)
255      _tt_append('\n<div class="footer">\n<p class="footer-content">\n@2018\n<a target="_blank" href="https://github.com/wjkaola123/blog">blog</a> -\xe5\xbc\x80\xe6\xba\x90\xe7\x9a\x84\xe5\x88\x86\xe5\xb8\x83\xe5\xbc\x8f\xe5\x8d\x9a\xe5\xae\xa2\xe7\xb3\xbb\xe7\xbb\x9f ')  # base.html:128
256      if not current_user:  # base.html:128
257          _tt_append(' -\n<a href="')  # base.html:129
258          _tt_tmp = handler.login_url()  # base.html:129
259          if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:129
260          else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:129
261          _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:129
262          _tt_append(_tt_tmp)  # base.html:129
263          _tt_append('">\n<span class="glyphicon glyphicon-wrench">\xe5\x90\x8e\xe5\x8f\xb0\xe7\xae\xa1\xe7\x90\x86</span>\n</a> ')  # base.html:131
264          pass  # base.html:128
265      _tt_append('\n</p>\n</div>\n<div class="btn-group-vertical floatButton">\n<button id="goTop" class="btn btn-default" title="\xe5\x8e\xbb\xe9\xa1\xb6\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-up"></span>\n</button>\n<button id="refresh" class="btn btn-default" title="\xe5\x88\xb7\xe6\x96\xb0" type="button">\n<span class="glyphicon glyphicon-refresh"></span>\n</button>\n<button id="goBottom" class="btn btn-default" title="\xe5\x8e\xbb\xe5\xba\x95\xe9\x83\xa8" type="button">\n<span class="glyphicon glyphicon-arrow-down"></span>\n</button>\n</div>\n')  # base.html:145
266      _tt_append('\n<script src="')  # base.html:146 (via base.html:145)
267      _tt_tmp = static_url('js/jquery-2.2.1.min.js')  # base.html:146 (via base.html:145)
268      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:146 (via base.html:145)
269      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:146 (via base.html:145)
270      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:146 (via base.html:145)
271      _tt_append(_tt_tmp)  # base.html:146 (via base.html:145)
272      _tt_append('"></script>\n<script src="')  # base.html:147 (via base.html:145)
273      _tt_tmp = static_url('js/bootstrap.min.js')  # base.html:147 (via base.html:145)
274      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:147 (via base.html:145)
275      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:147 (via base.html:145)
276      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:147 (via base.html:145)
277      _tt_append(_tt_tmp)  # base.html:147 (via base.html:145)
278      _tt_append('"></script>\n<script src="//cdn.bootcss.com/bootstrap-hover-dropdown/2.2.1/bootstrap-hover-dropdown.min.js"></script>\n<script src="')  # base.html:149 (via base.html:145)
279      _tt_tmp = static_url('js/floatButton.js')  # base.html:149 (via base.html:145)
280      if isinstance(_tt_tmp, _tt_string_types): _tt_tmp = _tt_utf8(_tt_tmp)  # base.html:149 (via base.html:145)
281      else: _tt_tmp = _tt_utf8(str(_tt_tmp))  # base.html:149 (via base.html:145)
282      _tt_tmp = _tt_utf8(xhtml_escape(_tt_tmp))  # base.html:149 (via base.html:145)
283      _tt_append(_tt_tmp)  # base.html:149 (via base.html:145)
284      _tt_append('"></script>\n')  # base.html:150 (via base.html:145)
285      _tt_append(' ')  # base.html:150
286      _tt_append(' ')  # base.html:150 (via base.html:150)
287      _tt_append('\n</body>\n</html>')  # base.html:153
288      return _tt_utf8('').join(_tt_buffer)  # base.html:0
2018-05-19 19:31:22,344 - tornado.application - web.py[line:1548] - ERROR - Uncaught exception GET / (::1)
HTTPServerRequest(protocol='http', host='localhost:8888', method='GET', uri='/', version='HTTP/1.1', remote_ip='::1', headers={'Accept-Language': 'zh-CN,zh;q=0.9', 'Accept-Encoding': 'gzip, deflate, br', 'Host': 'localhost:8888', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36', 'Connection': 'keep-alive', 'Cookie': 'uv_tag="2|1:0|10:1526707156|6:uv_tag|4:MTk=|d6b01a3c2fb07ad1d6932307f28288b31ef62f346eb3a47b020fa17eb84b46b3"', 'Cache-Control': 'max-age=0', 'If-None-Match': '"fb608ca66f01ea066f58ae669f39e6cf34a7cb39"', 'Upgrade-Insecure-Requests': '1'})
Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\tornado\web.py", line 1469, in _execute
    result = yield result
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1024, in run
    yielded = self.gen.send(value)
  File "e:\httpdocs\blog\controller\home.py", line 27, in get
    pager=pager, article_search_params=article_search_params)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 719, in render
    html = self.render_string(template_name, **kwargs)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 823, in render_string
    t = loader.load(template_name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 307, in __init__
    self.code = self._generate_python(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 355, in _generate_python
    ancestors = self._get_ancestors(loader)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 373, in _get_ancestors
    template = loader.load(chunk.name, self.name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 427, in load
    self.templates[name] = self._create_template(name)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 455, in _create_template
    template = Template(f.read(), name=name, loader=self)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 317, in __init__
    "exec", dont_inherit=True)
  File "base_html.generated.py", line 173
    if plugin.content
                    ^
SyntaxError: invalid syntax
2018-05-19 19:31:22,354 - tornado.access - web.py[line:1971] - ERROR - 500 GET / (::1) 206.00ms
2018-05-19 19:38:34,785 - tornado.application - web.py[line:1548] - ERROR - Uncaught exception GET / (::1)
HTTPServerRequest(protocol='http', host='localhost:8888', method='GET', uri='/', version='HTTP/1.1', remote_ip='::1', headers={'Accept-Language': 'zh-CN,zh;q=0.9', 'Accept-Encoding': 'gzip, deflate, br', 'Host': 'localhost:8888', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36', 'Connection': 'keep-alive', 'Cookie': 'uv_tag="2|1:0|10:1526707156|6:uv_tag|4:MTk=|d6b01a3c2fb07ad1d6932307f28288b31ef62f346eb3a47b020fa17eb84b46b3"', 'Cache-Control': 'max-age=0', 'If-None-Match': '"b7b71136676333f18e676784c5bb1f8aa9d214c1"', 'Upgrade-Insecure-Requests': '1'})
Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\tornado\web.py", line 1469, in _execute
    result = yield result
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1015, in run
    value = future.result()
  File "C:\Python27\lib\site-packages\tornado\concurrent.py", line 237, in result
    raise_exc_info(self._exc_info)
  File "C:\Python27\lib\site-packages\tornado\gen.py", line 1024, in run
    yielded = self.gen.send(value)
  File "e:\httpdocs\blog\controller\home.py", line 27, in get
    pager=pager, article_search_params=article_search_params)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 719, in render
    html = self.render_string(template_name, **kwargs)
  File "C:\Python27\lib\site-packages\tornado\web.py", line 826, in render_string
    return t.generate(**namespace)
  File "C:\Python27\lib\site-packages\tornado\template.py", line 348, in generate
    return execute()
  File "index_html.generated.py", line 323, in _tt_execute
    for k, v in SiteCollection.article_month_count:  # base.html:137 (via base.html:110, base.html:93)
ValueError: too many values to unpack
2018-05-19 19:38:34,805 - tornado.access - web.py[line:1971] - ERROR - 500 GET / (::1) 145.00ms
